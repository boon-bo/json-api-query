{"/Users/waynedouglas/Source/repos/json-api-query/src/index.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":414}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":53}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":56}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":46}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":66}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":66}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":71}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":71}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":69}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":74}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":81}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":66}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":71}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":78}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":66}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":65}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":73}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":49}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":51}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":53}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":57}},"39":{"start":{"line":40,"column":33},"end":{"line":40,"column":70}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":163}},"41":{"start":{"line":41,"column":98},"end":{"line":41,"column":157}},"42":{"start":{"line":42,"column":21},"end":{"line":42,"column":46}},"43":{"start":{"line":43,"column":0},"end":{"line":43,"column":127}},"44":{"start":{"line":43,"column":86},"end":{"line":43,"column":121}},"45":{"start":{"line":44,"column":22},"end":{"line":44,"column":48}},"46":{"start":{"line":45,"column":0},"end":{"line":45,"column":130}},"47":{"start":{"line":45,"column":87},"end":{"line":45,"column":124}},"48":{"start":{"line":46,"column":25},"end":{"line":46,"column":54}},"49":{"start":{"line":47,"column":0},"end":{"line":47,"column":139}},"50":{"start":{"line":47,"column":90},"end":{"line":47,"column":133}},"51":{"start":{"line":48,"column":24},"end":{"line":48,"column":52}},"52":{"start":{"line":49,"column":0},"end":{"line":49,"column":136}},"53":{"start":{"line":49,"column":89},"end":{"line":49,"column":130}},"54":{"start":{"line":50,"column":25},"end":{"line":50,"column":54}},"55":{"start":{"line":51,"column":0},"end":{"line":51,"column":139}},"56":{"start":{"line":51,"column":90},"end":{"line":51,"column":133}},"57":{"start":{"line":52,"column":22},"end":{"line":52,"column":48}},"58":{"start":{"line":53,"column":0},"end":{"line":53,"column":130}},"59":{"start":{"line":53,"column":87},"end":{"line":53,"column":124}},"60":{"start":{"line":54,"column":37},"end":{"line":54,"column":78}},"61":{"start":{"line":55,"column":0},"end":{"line":55,"column":175}},"62":{"start":{"line":55,"column":102},"end":{"line":55,"column":169}},"63":{"start":{"line":56,"column":29},"end":{"line":56,"column":62}},"64":{"start":{"line":57,"column":0},"end":{"line":57,"column":151}},"65":{"start":{"line":57,"column":94},"end":{"line":57,"column":145}},"66":{"start":{"line":58,"column":34},"end":{"line":58,"column":72}},"67":{"start":{"line":59,"column":0},"end":{"line":59,"column":166}},"68":{"start":{"line":59,"column":99},"end":{"line":59,"column":160}},"69":{"start":{"line":60,"column":26},"end":{"line":60,"column":56}},"70":{"start":{"line":61,"column":0},"end":{"line":61,"column":142}},"71":{"start":{"line":61,"column":91},"end":{"line":61,"column":136}},"72":{"start":{"line":62,"column":23},"end":{"line":62,"column":50}},"73":{"start":{"line":63,"column":0},"end":{"line":63,"column":133}},"74":{"start":{"line":63,"column":88},"end":{"line":63,"column":127}},"75":{"start":{"line":64,"column":24},"end":{"line":64,"column":52}},"76":{"start":{"line":65,"column":0},"end":{"line":65,"column":136}},"77":{"start":{"line":65,"column":89},"end":{"line":65,"column":130}},"78":{"start":{"line":66,"column":14},"end":{"line":66,"column":32}},"79":{"start":{"line":67,"column":0},"end":{"line":67,"column":106}},"80":{"start":{"line":67,"column":79},"end":{"line":67,"column":100}},"81":{"start":{"line":68,"column":18},"end":{"line":68,"column":40}},"82":{"start":{"line":69,"column":0},"end":{"line":69,"column":118}},"83":{"start":{"line":69,"column":83},"end":{"line":69,"column":112}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":84},"end":{"line":41,"column":85}},"loc":{"start":{"line":41,"column":96},"end":{"line":41,"column":159}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":72},"end":{"line":43,"column":73}},"loc":{"start":{"line":43,"column":84},"end":{"line":43,"column":123}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":73},"end":{"line":45,"column":74}},"loc":{"start":{"line":45,"column":85},"end":{"line":45,"column":126}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":47,"column":76},"end":{"line":47,"column":77}},"loc":{"start":{"line":47,"column":88},"end":{"line":47,"column":135}},"line":47},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":75},"end":{"line":49,"column":76}},"loc":{"start":{"line":49,"column":87},"end":{"line":49,"column":132}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":76},"end":{"line":51,"column":77}},"loc":{"start":{"line":51,"column":88},"end":{"line":51,"column":135}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":73},"end":{"line":53,"column":74}},"loc":{"start":{"line":53,"column":85},"end":{"line":53,"column":126}},"line":53},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":88},"end":{"line":55,"column":89}},"loc":{"start":{"line":55,"column":100},"end":{"line":55,"column":171}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":57,"column":80},"end":{"line":57,"column":81}},"loc":{"start":{"line":57,"column":92},"end":{"line":57,"column":147}},"line":57},"13":{"name":"(anonymous_13)","decl":{"start":{"line":59,"column":85},"end":{"line":59,"column":86}},"loc":{"start":{"line":59,"column":97},"end":{"line":59,"column":162}},"line":59},"14":{"name":"(anonymous_14)","decl":{"start":{"line":61,"column":77},"end":{"line":61,"column":78}},"loc":{"start":{"line":61,"column":89},"end":{"line":61,"column":138}},"line":61},"15":{"name":"(anonymous_15)","decl":{"start":{"line":63,"column":74},"end":{"line":63,"column":75}},"loc":{"start":{"line":63,"column":86},"end":{"line":63,"column":129}},"line":63},"16":{"name":"(anonymous_16)","decl":{"start":{"line":65,"column":75},"end":{"line":65,"column":76}},"loc":{"start":{"line":65,"column":87},"end":{"line":65,"column":132}},"line":65},"17":{"name":"(anonymous_17)","decl":{"start":{"line":67,"column":65},"end":{"line":67,"column":66}},"loc":{"start":{"line":67,"column":77},"end":{"line":67,"column":102}},"line":67},"18":{"name":"(anonymous_18)","decl":{"start":{"line":69,"column":69},"end":{"line":69,"column":70}},"loc":{"start":{"line":69,"column":81},"end":{"line":69,"column":114}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":18,"2":18,"3":18,"4":18,"5":18,"6":54,"7":18,"8":0,"9":0,"10":0,"11":1,"12":22,"13":18,"14":18,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":0,"42":1,"43":1,"44":0,"45":1,"46":1,"47":0,"48":1,"49":1,"50":0,"51":1,"52":1,"53":0,"54":1,"55":1,"56":0,"57":1,"58":1,"59":0,"60":1,"61":1,"62":0,"63":1,"64":1,"65":0,"66":1,"67":1,"68":0,"69":1,"70":1,"71":0,"72":1,"73":1,"74":0,"75":1,"76":1,"77":0,"78":1,"79":1,"80":0,"81":1,"82":1,"83":0},"f":{"0":18,"1":54,"2":0,"3":22,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"0":[1,1,1],"1":[1,0],"2":[18,0],"3":[18,0],"4":[18,18],"5":[0,18],"6":[18,0],"7":[0,0],"8":[1,1,1],"9":[18,0],"10":[18,18]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/index.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,qDAAkC;AAClC,wDAAqC;AACrC,8CAA2B;AAC3B,8CAA2B;AAC3B,kEAA+C;AAC/C,kEAA+C;AAC/C,uEAAoD;AACpD,uEAAoD;AACpD,qEAAkD;AAClD,0EAAuD;AACvD,iFAA8D;AAC9D,kEAA+C;AAC/C,uEAAoD;AACpD,8EAA2D;AAC3D,kEAA+C;AAC/C,iEAA8C;AAC9C,yEAAsD;AACtD,iDAA8B;AAC9B,gDAA6B;AAC7B,mDAAgC;AAChC,qDAAkC;AAClC,yDAAsC;AACtC,uEAAoE;AAA5D,oIAAA,wBAAwB,OAAA;AAChC,+CAA4C;AAApC,4GAAA,YAAY,OAAA;AACpB,iDAA8C;AAAtC,8GAAA,aAAa,OAAA;AACrB,uDAAoD;AAA5C,oHAAA,gBAAgB,OAAA;AACxB,qDAAkD;AAA1C,kHAAA,eAAe,OAAA;AACvB,uDAAoD;AAA5C,oHAAA,gBAAgB,OAAA;AACxB,iDAA8C;AAAtC,8GAAA,aAAa,OAAA;AACrB,+EAA4E;AAApE,4IAAA,4BAA4B,OAAA;AACpC,+DAA4D;AAApD,4HAAA,oBAAoB,OAAA;AAC5B,yEAAsE;AAA9D,sIAAA,yBAAyB,OAAA;AACjC,yDAAsD;AAA9C,sHAAA,iBAAiB,OAAA;AACzB,mDAAgD;AAAxC,gHAAA,cAAc,OAAA;AACtB,qDAAkD;AAA1C,kHAAA,eAAe,OAAA;AACvB,iCAA8B;AAAtB,8FAAA,KAAK,OAAA;AACb,yCAAsC;AAA9B,sGAAA,SAAS,OAAA","sourcesContent":["// @index('./**/*.ts', f => `export * from '${f.path}'`)\nexport * from './IBooleanOperator'\nexport * from './IComparisonOperator'\nexport * from './IOperator'\nexport * from './IPageInfo'\nexport * from './operators/dialect/AndOperator'\nexport * from './operators/dialect/AnyOperator'\nexport * from './operators/dialect/ContainsOperator'\nexport * from './operators/dialect/EndsWithOperator'\nexport * from './operators/dialect/EqualsOperator'\nexport * from './operators/dialect/GreaterThanOperator'\nexport * from './operators/dialect/GreaterThanOrEqualOperator'\nexport * from './operators/dialect/HasOperator'\nexport * from './operators/dialect/LessThanOperator'\nexport * from './operators/dialect/LessThanOrEqualOperator'\nexport * from './operators/dialect/NotOperator'\nexport * from './operators/dialect/OrOperator'\nexport * from './operators/dialect/StartsWithOperator'\nexport * from './QueryBuilder'\nexport * from './SparseField'\nexport * from './SparseFieldSet'\nexport * from './Utils/Expression'\nexport * from './Utils/ExpressionType'\nexport {FindOptionsWhereProperty} from \"./FindOptionsWhereProperty\";\nexport {FindOperator} from \"./FindOperator\";\nexport {EqualOperator} from \"./EqualOperator\";\nexport {FindOptionsWhere} from \"./FindOptionsWhere\";\nexport {InstanceChecker} from \"./InstanceChecker\";\nexport {FindOperatorType} from \"./FindOperatorType\";\nexport {ObjectLiteral} from \"./ObjectLiteral\";\nexport {FindOptionsRelationsProperty} from \"./FindOptionsRelationsProperty\";\nexport {FindOptionsRelations} from \"./FindOptionsRelations\";\nexport {FindOptionsSelectProperty} from \"./FindOptionsSelectProperty\";\nexport {FindOptionsSelect} from \"./FindOptionsSelect\";\nexport {FindOneOptions} from \"./FindOneOptions\";\nexport {FindManyOptions} from \"./FindManyOptions\";\nexport {Sorts} from \"./Sorts\";\nexport {SortField} from \"./SortField\";\n// @endindex\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5269218c402d73b4e12927f7458880a520550260"},"/Users/waynedouglas/Source/repos/json-api-query/src/IBooleanOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/IBooleanOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/IBooleanOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/IBooleanOperator.ts"],"names":[],"mappings":"","sourcesContent":["import { IOperator } from \"./IOperator\";\n\n\nexport interface IBooleanOperator extends IOperator { }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c2ac68160a81850f369903cb57309faa7ac7a20"},"/Users/waynedouglas/Source/repos/json-api-query/src/IComparisonOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/IComparisonOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/IComparisonOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/IComparisonOperator.ts"],"names":[],"mappings":"","sourcesContent":["import { IOperator } from \"./IOperator\";\n\n\nexport interface IComparisonOperator extends IOperator { }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e4492343b69e08e1f711f72702319b0c7351ee2e"},"/Users/waynedouglas/Source/repos/json-api-query/src/IOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/IOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/IOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/IOperator.ts"],"names":[],"mappings":"","sourcesContent":["export interface IOperator {\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2bcfd151a695181ed4ec1e9176a823bbf6fb4b11"},"/Users/waynedouglas/Source/repos/json-api-query/src/IPageInfo.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/IPageInfo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/IPageInfo.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/IPageInfo.ts"],"names":[],"mappings":"","sourcesContent":["\nexport interface IPageInfo {\n    size: number;\n    number: number;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9c42968ab671a9e013e9a8548e688ba9bef10a8"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AndOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AndOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":19},"end":{"line":17,"column":3}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":39}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":6}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":104}},"11":{"start":{"line":14,"column":64},"end":{"line":14,"column":84}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":31},"end":{"line":17,"column":1}},"line":4},"1":{"name":"AndOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":27},"end":{"line":12,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":37},"end":{"line":13,"column":38}},"loc":{"start":{"line":13,"column":49},"end":{"line":15,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":49},"end":{"line":14,"column":50}},"loc":{"start":{"line":14,"column":62},"end":{"line":14,"column":86}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AndOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AndOperator.ts"],"names":[],"mappings":";;;AAGA;IAGI;QAAY,gBAAqC;aAArC,UAAqC,EAArC,qBAAqC,EAArC,IAAqC;YAArC,2BAAqC;;QAFjD,eAAU,GAA+B,EAAE,CAAC;QAGxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC7B,CAAC;IAED,8BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,EAAZ,CAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC;IACtE,CAAC;IACL,kBAAC;AAAD,CAAC,AAVD,IAUC;AAVY,kCAAW","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\nimport { IBooleanOperator } from \"../../IBooleanOperator\";\n\nexport class AndOperator implements IBooleanOperator {\n    _operators: Array<IComparisonOperator> = [];\n\n    constructor(...params: Array<IComparisonOperator>) {\n        this._operators = params;\n    }\n\n    toString(): string {\n        return `and(${this._operators.map(x => x.toString()).join(',')})`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"107a7be09ceeff95ad41b61b458f9e7668347915"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AnyOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AnyOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":19},"end":{"line":18,"column":3}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":43}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":34}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":30}},"10":{"start":{"line":14,"column":4},"end":{"line":16,"column":6}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":86}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"13":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":31},"end":{"line":18,"column":1}},"line":4},"1":{"name":"AnyOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":35},"end":{"line":13,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":37},"end":{"line":14,"column":38}},"loc":{"start":{"line":14,"column":49},"end":{"line":16,"column":5}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":5,"7":3,"8":3,"9":3,"10":1,"11":2,"12":1,"13":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AnyOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/AnyOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,qBAAmB,QAAgB;QAAE,gBAAwB;aAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;YAAxB,+BAAwB;;QAA1C,aAAQ,GAAR,QAAQ,CAAQ;QAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,8BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,SAAS,cAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC;IAC9D,CAAC;IACL,kBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,kCAAW","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class AnyOperator implements IComparisonOperator {\n\n    _property: string;\n    _values: Array<string>;\n\n    constructor(public property: string, ...params: Array<string>) {\n        this._property = property;\n        this._values = params;\n    }\n\n    toString(): string {\n        return `any(${this._property},${this._values.join(',')})`;\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7e918bc74998ab7cbf020a8cf6106829c8df9f6"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/ContainsOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/ContainsOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":24},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":82}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":36},"end":{"line":15,"column":1}},"line":4},"1":{"name":"ContainsOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":29}},"loc":{"start":{"line":5,"column":47},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":42},"end":{"line":11,"column":43}},"loc":{"start":{"line":11,"column":54},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/ContainsOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/ContainsOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,0BAAmB,QAAgB,EAAS,KAAa;QAAtC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QACrD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,mBAAY,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC1D,CAAC;IACL,uBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,4CAAgB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class ContainsOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: string) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `contains(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff1673636d8d3f2faa2983a0e167da9d9105d130"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EndsWithOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EndsWithOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":24},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":82}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":36},"end":{"line":15,"column":1}},"line":4},"1":{"name":"EndsWithOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":29}},"loc":{"start":{"line":5,"column":47},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":42},"end":{"line":11,"column":43}},"loc":{"start":{"line":11,"column":54},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EndsWithOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EndsWithOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,0BAAmB,QAAgB,EAAS,KAAU;QAAnC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,mBAAY,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC1D,CAAC;IACL,uBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,4CAAgB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class EndsWithOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: any) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `endsWith(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aa5d6cc68d345e3033f54a41a4e80babce4ea1c9"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EqualsOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EqualsOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":22},"end":{"line":20,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":18,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":84}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":82}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":22},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":34},"end":{"line":20,"column":1}},"line":4},"1":{"name":"EqualsOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":27}},"loc":{"start":{"line":5,"column":45},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":40},"end":{"line":11,"column":41}},"loc":{"start":{"line":11,"column":52},"end":{"line":18,"column":5}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":17,"column":9}},{"start":{"line":12,"column":8},"end":{"line":17,"column":9}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":20,"4":20,"5":20,"6":20,"7":1,"8":18,"9":18,"10":0,"11":1,"12":1},"f":{"0":1,"1":20,"2":18},"b":{"0":[18,0]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EqualsOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/EqualsOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,wBAAmB,QAAgB,EAAS,KAAa;QAAtC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QACrD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,iCAAQ,GAAR;QAEI,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;YACvB,OAAO,iBAAU,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;SACvD;aACI;YACD,OAAO,iBAAU,IAAI,CAAC,SAAS,cAAI,IAAI,CAAC,MAAM,MAAG,CAAA;SACpD;IACL,CAAC;IACL,qBAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,wCAAc","sourcesContent":["import { classImplements, isBooleanLiteral } from '@babel/types';\nimport { IComparisonOperator } from \"../../IComparisonOperator\";\n\nexport class EqualsOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: string) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        // special case for null\n        if (this._value != \"null\") {\n            return `equals(${this._property},'${this._value}')`;\n        }\n        else {\n            return `equals(${this._property},${this._value})`\n        }\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"390ca209c5d0a53847dbaf18a9ad0b63f7f90bd9"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":27},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":85}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":27},"end":{"line":4,"column":28}},"loc":{"start":{"line":4,"column":39},"end":{"line":15,"column":1}},"line":4},"1":{"name":"GreaterThanOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":50},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":45},"end":{"line":11,"column":46}},"loc":{"start":{"line":11,"column":57},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":4,"7":1,"8":3,"9":1,"10":1},"f":{"0":1,"1":4,"2":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,6BAAmB,QAAgB,EAAS,KAAU;QAAnC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,sCAAQ,GAAR;QACI,OAAO,sBAAe,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC7D,CAAC;IACL,0BAAC;AAAD,CAAC,AAbD,IAaC;AAbY,kDAAmB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class GreaterThanOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: any) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `greaterThan(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"50c9e113cafe68245470703a615d4c83e9188c36"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOrEqualOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOrEqualOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":34},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":88}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":38}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":34},"end":{"line":4,"column":35}},"loc":{"start":{"line":4,"column":46},"end":{"line":15,"column":1}},"line":4},"1":{"name":"GreaterThanOrEqualOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":39}},"loc":{"start":{"line":5,"column":57},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":52},"end":{"line":11,"column":53}},"loc":{"start":{"line":11,"column":64},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOrEqualOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/GreaterThanOrEqualOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,oCAAmB,QAAgB,EAAS,KAAU;QAAnC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,6CAAQ,GAAR;QACI,OAAO,yBAAkB,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAChE,CAAC;IACL,iCAAC;AAAD,CAAC,AAbD,IAaC;AAbY,gEAA0B","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class GreaterThanOrEqualOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: any) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `greaterOrEqual(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"155af3a89316594f55f3cfc132ec2c3401d20973"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/HasOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/HasOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":19},"end":{"line":19,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":67}},"4":{"start":{"line":6,"column":42},"end":{"line":6,"column":65}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":33}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":47}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":48}},"9":{"start":{"line":12,"column":4},"end":{"line":17,"column":6}},"10":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"11":{"start":{"line":14,"column":12},"end":{"line":14,"column":100}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":52}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"14":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":31},"end":{"line":19,"column":1}},"line":4},"1":{"name":"HasOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":52},"end":{"line":11,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":37},"end":{"line":12,"column":38}},"loc":{"start":{"line":12,"column":49},"end":{"line":17,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":67}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":67}},{"start":{"line":6,"column":8},"end":{"line":6,"column":67}}],"line":6},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":5,"4":1,"5":5,"6":5,"7":5,"8":5,"9":1,"10":5,"11":4,"12":1,"13":1,"14":1},"f":{"0":1,"1":5,"2":5},"b":{"0":[1,4],"1":[4,1]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/HasOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/HasOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,qBAAmB,QAAgB,EAAS,eAAkD;QAAlD,gCAAA,EAAA,sBAAkD;QAA3E,aAAQ,GAAR,QAAQ,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAmC;QAC1F,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;IAC5C,CAAC;IAED,8BAAQ,GAAR;QACI,IAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAC9B,OAAO,cAAO,IAAI,CAAC,SAAS,cAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAG,CAAC;SACvE;QAED,OAAO,eAAQ,IAAI,CAAC,SAAS,OAAI,CAAC;IACtC,CAAC;IACL,kBAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,kCAAW","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class HasOperator implements IComparisonOperator {\n\n    _property: string;\n    _filterCondition: IComparisonOperator | null;\n\n    constructor(public property: string, public filterCondition: IComparisonOperator | null = null) {\n        this._property = property;\n        this._filterCondition = filterCondition;\n    }\n\n    toString(): string {\n        if(this._filterCondition != null) {\n            return `has(${this._property},${this._filterCondition.toString()})`;\n        }\n\n        return `has('${this._property}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aa85ce76fa7e9162105d5e81541fc632a210ecdd"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":24},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":82}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":24},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":36},"end":{"line":15,"column":1}},"line":4},"1":{"name":"LessThanOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":29}},"loc":{"start":{"line":5,"column":47},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":42},"end":{"line":11,"column":43}},"loc":{"start":{"line":11,"column":54},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,0BAAmB,QAAgB,EAAS,KAAU;QAAnC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,mCAAQ,GAAR;QACI,OAAO,mBAAY,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC1D,CAAC;IACL,uBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,4CAAgB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class LessThanOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: any) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `lessThan(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eea1dd83b57c7dfcda6521f2681716bef7012d9b"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOrEqualOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOrEqualOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":31},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":85}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":31},"end":{"line":4,"column":32}},"loc":{"start":{"line":4,"column":43},"end":{"line":15,"column":1}},"line":4},"1":{"name":"LessThanOrEqualOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":36}},"loc":{"start":{"line":5,"column":54},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":49},"end":{"line":11,"column":50}},"loc":{"start":{"line":11,"column":61},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOrEqualOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/LessThanOrEqualOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,iCAAmB,QAAgB,EAAS,KAAU;QAAnC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAK;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,0CAAQ,GAAR;QACI,OAAO,sBAAe,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC7D,CAAC;IACL,8BAAC;AAAD,CAAC,AAbD,IAaC;AAbY,0DAAuB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class LessThanOrEqualOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: any) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `lessOrEqual(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c0a91bbb103be4247bb25f32e59def28fcfd4929"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/NotOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/NotOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":19},"end":{"line":13,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":37}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":38}},"5":{"start":{"line":9,"column":4},"end":{"line":11,"column":6}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":63}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":31},"end":{"line":13,"column":1}},"line":4},"1":{"name":"NotOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":37},"end":{"line":8,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":37},"end":{"line":9,"column":38}},"loc":{"start":{"line":9,"column":49},"end":{"line":11,"column":5}},"line":9}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":6,"4":6,"5":1,"6":5,"7":1,"8":1},"f":{"0":1,"1":6,"2":5},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/NotOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/NotOperator.ts"],"names":[],"mappings":";;;AAGA;IAII,qBAAmB,UAA+B;QAA/B,eAAU,GAAV,UAAU,CAAqB;QAC9C,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED,8BAAQ,GAAR;QACI,OAAO,cAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAG,CAAC;IACjD,CAAC;IACL,kBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,kCAAW","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class NotOperator implements IComparisonOperator {\n\n    _comparison: IComparisonOperator;\n\n    constructor(public comparison: IComparisonOperator) {\n        this._comparison = comparison;\n    }\n\n    toString(): string {\n        return `not(${this._comparison.toString()})`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ea1ac88cd7ab6f9d4cde4ecabbc5de3a97bf985"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/OrOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/OrOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":18},"end":{"line":21,"column":3}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":39}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"9":{"start":{"line":13,"column":4},"end":{"line":19,"column":6}},"10":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":87}},"12":{"start":{"line":17,"column":20},"end":{"line":17,"column":88}},"13":{"start":{"line":17,"column":55},"end":{"line":17,"column":75}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":40}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":30},"end":{"line":21,"column":1}},"line":4},"1":{"name":"OrOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":23}},"loc":{"start":{"line":5,"column":26},"end":{"line":12,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":36},"end":{"line":13,"column":37}},"loc":{"start":{"line":13,"column":48},"end":{"line":19,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":40},"end":{"line":17,"column":41}},"loc":{"start":{"line":17,"column":53},"end":{"line":17,"column":77}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":9,"7":4,"8":4,"9":1,"10":4,"11":0,"12":4,"13":9,"14":4,"15":1,"16":1},"f":{"0":1,"1":4,"2":4,"3":9},"b":{"0":[0,4]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/OrOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/OrOperator.ts"],"names":[],"mappings":";;;AAGA;IAGI;QAAY,gBAAqC;aAArC,UAAqC,EAArC,qBAAqC,EAArC,IAAqC;YAArC,2BAAqC;;QAFjD,eAAU,GAA+B,EAAE,CAAC;QAGxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC7B,CAAC;IACD,6BAAQ,GAAR;QACI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;SAC9E;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,EAAZ,CAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7D,OAAO,aAAM,KAAK,MAAG,CAAC;IAC1B,CAAC;IACL,iBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,gCAAU","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\nimport { IBooleanOperator } from \"../../IBooleanOperator\";\n\nexport class OrOperator implements IBooleanOperator {\n    _operators: Array<IComparisonOperator> = [];\n\n    constructor(...params: Array<IComparisonOperator>) {\n        this._operators = params;\n    }\n    toString(): string {\n        if (this._operators.length < 2) {\n            throw new Error(\"Cannot use OrOperator with a single comparison operator\");\n        }\n\n        let final = this._operators.map(x => x.toString()).join(',');\n        return `or(${final})`;\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db995cbdda0347ee36376b614a53af8780f60735"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/StartsWithOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/StartsWithOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":26},"end":{"line":15,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":84}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":26},"end":{"line":4,"column":27}},"loc":{"start":{"line":4,"column":38},"end":{"line":15,"column":1}},"line":4},"1":{"name":"StartsWithOperator","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":31}},"loc":{"start":{"line":5,"column":49},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":56},"end":{"line":13,"column":5}},"line":11}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":3,"5":3,"6":3,"7":1,"8":2,"9":1,"10":1},"f":{"0":1,"1":3,"2":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/StartsWithOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/StartsWithOperator.ts"],"names":[],"mappings":";;;AAGA;IAKI,4BAAmB,QAAgB,EAAS,KAAa;QAAtC,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QACrD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,qCAAQ,GAAR;QACI,OAAO,qBAAc,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,OAAI,CAAC;IAC5D,CAAC;IACL,yBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,gDAAkB","sourcesContent":["import { IComparisonOperator } from \"../../IComparisonOperator\";\n\n\nexport class StartsWithOperator implements IComparisonOperator {\n\n    _property: string;\n    _value: string;\n\n    constructor(public property: string, public value: string) {\n        this._property = property;\n        this._value = value;\n    }\n\n    toString(): string {\n        return `startsWith(${this._property},'${this._value}')`;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d4b45336030ca3f8d488b05d843cd55cd16c5ab"},"/Users/waynedouglas/Source/repos/json-api-query/src/QueryBuilder.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/QueryBuilder.ts","statementMap":{"0":{"start":{"line":2,"column":20},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":5}},"2":{"start":{"line":3,"column":40},"end":{"line":8,"column":5}},"3":{"start":{"line":3,"column":53},"end":{"line":3,"column":54}},"4":{"start":{"line":3,"column":60},"end":{"line":3,"column":71}},"5":{"start":{"line":4,"column":8},"end":{"line":7,"column":9}},"6":{"start":{"line":5,"column":12},"end":{"line":5,"column":65}},"7":{"start":{"line":5,"column":21},"end":{"line":5,"column":65}},"8":{"start":{"line":6,"column":12},"end":{"line":6,"column":28}},"9":{"start":{"line":9,"column":4},"end":{"line":9,"column":61}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"12":{"start":{"line":13,"column":16},"end":{"line":13,"column":46}},"13":{"start":{"line":14,"column":24},"end":{"line":14,"column":52}},"14":{"start":{"line":15,"column":23},"end":{"line":15,"column":50}},"15":{"start":{"line":16,"column":20},"end":{"line":16,"column":44}},"16":{"start":{"line":17,"column":14},"end":{"line":17,"column":32}},"17":{"start":{"line":18,"column":18},"end":{"line":18,"column":40}},"18":{"start":{"line":19,"column":20},"end":{"line":275,"column":3}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":71}},"20":{"start":{"line":21,"column":44},"end":{"line":21,"column":69}},"21":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"22":{"start":{"line":22,"column":32},"end":{"line":22,"column":43}},"23":{"start":{"line":23,"column":8},"end":{"line":23,"column":51}},"24":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"25":{"start":{"line":25,"column":8},"end":{"line":25,"column":29}},"26":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"27":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"28":{"start":{"line":28,"column":8},"end":{"line":28,"column":28}},"29":{"start":{"line":29,"column":8},"end":{"line":29,"column":27}},"30":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"31":{"start":{"line":31,"column":8},"end":{"line":31,"column":39}},"32":{"start":{"line":32,"column":8},"end":{"line":32,"column":38}},"33":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"34":{"start":{"line":34,"column":8},"end":{"line":34,"column":28}},"35":{"start":{"line":36,"column":4},"end":{"line":39,"column":6}},"36":{"start":{"line":37,"column":8},"end":{"line":37,"column":36}},"37":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"38":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"39":{"start":{"line":41,"column":8},"end":{"line":41,"column":39}},"40":{"start":{"line":43,"column":4},"end":{"line":46,"column":6}},"41":{"start":{"line":44,"column":25},"end":{"line":44,"column":53}},"42":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"43":{"start":{"line":47,"column":4},"end":{"line":58,"column":6}},"44":{"start":{"line":48,"column":21},"end":{"line":48,"column":51}},"45":{"start":{"line":49,"column":8},"end":{"line":56,"column":9}},"46":{"start":{"line":50,"column":12},"end":{"line":55,"column":13}},"47":{"start":{"line":51,"column":16},"end":{"line":51,"column":86}},"48":{"start":{"line":54,"column":16},"end":{"line":54,"column":68}},"49":{"start":{"line":57,"column":8},"end":{"line":57,"column":22}},"50":{"start":{"line":59,"column":4},"end":{"line":73,"column":6}},"51":{"start":{"line":60,"column":8},"end":{"line":72,"column":9}},"52":{"start":{"line":61,"column":12},"end":{"line":71,"column":13}},"53":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"54":{"start":{"line":63,"column":20},"end":{"line":63,"column":90}},"55":{"start":{"line":66,"column":20},"end":{"line":66,"column":100}},"56":{"start":{"line":70,"column":16},"end":{"line":70,"column":81}},"57":{"start":{"line":74,"column":4},"end":{"line":85,"column":6}},"58":{"start":{"line":75,"column":21},"end":{"line":75,"column":23}},"59":{"start":{"line":76,"column":8},"end":{"line":83,"column":9}},"60":{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},"61":{"start":{"line":78,"column":16},"end":{"line":78,"column":33}},"62":{"start":{"line":81,"column":16},"end":{"line":81,"column":73}},"63":{"start":{"line":84,"column":8},"end":{"line":84,"column":22}},"64":{"start":{"line":86,"column":4},"end":{"line":95,"column":6}},"65":{"start":{"line":87,"column":8},"end":{"line":94,"column":9}},"66":{"start":{"line":88,"column":12},"end":{"line":93,"column":13}},"67":{"start":{"line":89,"column":16},"end":{"line":89,"column":46}},"68":{"start":{"line":92,"column":16},"end":{"line":92,"column":86}},"69":{"start":{"line":96,"column":4},"end":{"line":107,"column":6}},"70":{"start":{"line":97,"column":21},"end":{"line":97,"column":69}},"71":{"start":{"line":98,"column":8},"end":{"line":105,"column":9}},"72":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"73":{"start":{"line":100,"column":16},"end":{"line":100,"column":76}},"74":{"start":{"line":103,"column":16},"end":{"line":103,"column":77}},"75":{"start":{"line":106,"column":8},"end":{"line":106,"column":22}},"76":{"start":{"line":108,"column":4},"end":{"line":117,"column":6}},"77":{"start":{"line":109,"column":8},"end":{"line":116,"column":9}},"78":{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},"79":{"start":{"line":111,"column":16},"end":{"line":111,"column":76}},"80":{"start":{"line":114,"column":16},"end":{"line":114,"column":92}},"81":{"start":{"line":118,"column":4},"end":{"line":154,"column":6}},"82":{"start":{"line":119,"column":20},"end":{"line":119,"column":24}},"83":{"start":{"line":120,"column":24},"end":{"line":120,"column":26}},"84":{"start":{"line":121,"column":8},"end":{"line":152,"column":9}},"85":{"start":{"line":122,"column":12},"end":{"line":130,"column":28}},"86":{"start":{"line":124,"column":16},"end":{"line":128,"column":17}},"87":{"start":{"line":125,"column":20},"end":{"line":127,"column":21}},"88":{"start":{"line":126,"column":24},"end":{"line":126,"column":92}},"89":{"start":{"line":129,"column":16},"end":{"line":129,"column":51}},"90":{"start":{"line":133,"column":12},"end":{"line":151,"column":13}},"91":{"start":{"line":134,"column":16},"end":{"line":135,"column":29}},"92":{"start":{"line":135,"column":20},"end":{"line":135,"column":29}},"93":{"start":{"line":136,"column":16},"end":{"line":149,"column":17}},"94":{"start":{"line":137,"column":20},"end":{"line":148,"column":21}},"95":{"start":{"line":139,"column":25},"end":{"line":148,"column":21}},"96":{"start":{"line":140,"column":34},"end":{"line":140,"column":61}},"97":{"start":{"line":141,"column":24},"end":{"line":141,"column":56}},"98":{"start":{"line":142,"column":24},"end":{"line":142,"column":59}},"99":{"start":{"line":143,"column":24},"end":{"line":143,"column":33}},"100":{"start":{"line":146,"column":24},"end":{"line":146,"column":86}},"101":{"start":{"line":147,"column":24},"end":{"line":147,"column":33}},"102":{"start":{"line":150,"column":16},"end":{"line":150,"column":66}},"103":{"start":{"line":153,"column":8},"end":{"line":153,"column":25}},"104":{"start":{"line":155,"column":4},"end":{"line":196,"column":6}},"105":{"start":{"line":156,"column":20},"end":{"line":156,"column":24}},"106":{"start":{"line":157,"column":29},"end":{"line":157,"column":37}},"107":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"108":{"start":{"line":159,"column":12},"end":{"line":159,"column":69}},"109":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"110":{"start":{"line":162,"column":12},"end":{"line":162,"column":66}},"111":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"112":{"start":{"line":165,"column":12},"end":{"line":165,"column":71}},"113":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"114":{"start":{"line":168,"column":12},"end":{"line":168,"column":71}},"115":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"116":{"start":{"line":171,"column":12},"end":{"line":171,"column":74}},"117":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"118":{"start":{"line":174,"column":12},"end":{"line":174,"column":81}},"119":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"120":{"start":{"line":177,"column":12},"end":{"line":177,"column":71}},"121":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"122":{"start":{"line":180,"column":12},"end":{"line":180,"column":78}},"123":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"124":{"start":{"line":183,"column":12},"end":{"line":183,"column":66}},"125":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"126":{"start":{"line":186,"column":12},"end":{"line":186,"column":78}},"127":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"128":{"start":{"line":189,"column":12},"end":{"line":189,"column":73}},"129":{"start":{"line":191,"column":8},"end":{"line":194,"column":9}},"130":{"start":{"line":192,"column":22},"end":{"line":192,"column":86}},"131":{"start":{"line":192,"column":50},"end":{"line":192,"column":83}},"132":{"start":{"line":193,"column":12},"end":{"line":193,"column":118}},"133":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"134":{"start":{"line":197,"column":4},"end":{"line":273,"column":6}},"135":{"start":{"line":199,"column":20},"end":{"line":199,"column":24}},"136":{"start":{"line":200,"column":8},"end":{"line":200,"column":45}},"137":{"start":{"line":200,"column":32},"end":{"line":200,"column":43}},"138":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"139":{"start":{"line":202,"column":12},"end":{"line":202,"column":79}},"140":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"141":{"start":{"line":205,"column":12},"end":{"line":205,"column":98}},"142":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"143":{"start":{"line":208,"column":12},"end":{"line":208,"column":92}},"144":{"start":{"line":210,"column":8},"end":{"line":212,"column":9}},"145":{"start":{"line":211,"column":12},"end":{"line":211,"column":67}},"146":{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},"147":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"148":{"start":{"line":215,"column":16},"end":{"line":215,"column":36}},"149":{"start":{"line":217,"column":12},"end":{"line":217,"column":57}},"150":{"start":{"line":219,"column":8},"end":{"line":224,"column":9}},"151":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"152":{"start":{"line":221,"column":16},"end":{"line":221,"column":36}},"153":{"start":{"line":223,"column":12},"end":{"line":223,"column":61}},"154":{"start":{"line":226,"column":23},"end":{"line":226,"column":25}},"155":{"start":{"line":227,"column":20},"end":{"line":227,"column":22}},"156":{"start":{"line":228,"column":39},"end":{"line":228,"column":47}},"157":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"158":{"start":{"line":230,"column":12},"end":{"line":230,"column":74}},"159":{"start":{"line":232,"column":8},"end":{"line":232,"column":137}},"160":{"start":{"line":232,"column":54},"end":{"line":232,"column":123}},"161":{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},"162":{"start":{"line":234,"column":12},"end":{"line":234,"column":61}},"163":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"164":{"start":{"line":237,"column":12},"end":{"line":237,"column":116}},"165":{"start":{"line":239,"column":8},"end":{"line":241,"column":9}},"166":{"start":{"line":240,"column":12},"end":{"line":240,"column":61}},"167":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"168":{"start":{"line":243,"column":12},"end":{"line":243,"column":88}},"169":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"170":{"start":{"line":246,"column":12},"end":{"line":246,"column":88}},"171":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"172":{"start":{"line":249,"column":12},"end":{"line":249,"column":82}},"173":{"start":{"line":251,"column":8},"end":{"line":253,"column":9}},"174":{"start":{"line":252,"column":12},"end":{"line":252,"column":118}},"175":{"start":{"line":254,"column":8},"end":{"line":260,"column":9}},"176":{"start":{"line":255,"column":12},"end":{"line":259,"column":111}},"177":{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},"178":{"start":{"line":262,"column":12},"end":{"line":270,"column":15}},"179":{"start":{"line":263,"column":35},"end":{"line":263,"column":52}},"180":{"start":{"line":264,"column":16},"end":{"line":269,"column":17}},"181":{"start":{"line":265,"column":20},"end":{"line":265,"column":105}},"182":{"start":{"line":268,"column":20},"end":{"line":268,"column":41}},"183":{"start":{"line":272,"column":8},"end":{"line":272,"column":21}},"184":{"start":{"line":274,"column":4},"end":{"line":274,"column":24}},"185":{"start":{"line":276,"column":0},"end":{"line":276,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":52},"end":{"line":2,"column":53}},"loc":{"start":{"line":2,"column":78},"end":{"line":10,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":20},"end":{"line":19,"column":21}},"loc":{"start":{"line":19,"column":32},"end":{"line":275,"column":1}},"line":19},"2":{"name":"QueryBuilder","decl":{"start":{"line":20,"column":13},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":52},"end":{"line":35,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":34},"end":{"line":36,"column":35}},"loc":{"start":{"line":36,"column":53},"end":{"line":39,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":48},"end":{"line":40,"column":49}},"loc":{"start":{"line":40,"column":65},"end":{"line":42,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":38},"end":{"line":43,"column":39}},"loc":{"start":{"line":43,"column":65},"end":{"line":46,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":40},"end":{"line":47,"column":41}},"loc":{"start":{"line":47,"column":59},"end":{"line":58,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":49},"end":{"line":59,"column":50}},"loc":{"start":{"line":59,"column":82},"end":{"line":73,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":74,"column":43},"end":{"line":74,"column":44}},"loc":{"start":{"line":74,"column":64},"end":{"line":85,"column":5}},"line":74},"9":{"name":"(anonymous_9)","decl":{"start":{"line":86,"column":52},"end":{"line":86,"column":53}},"loc":{"start":{"line":86,"column":87},"end":{"line":95,"column":5}},"line":86},"10":{"name":"(anonymous_10)","decl":{"start":{"line":96,"column":50},"end":{"line":96,"column":51}},"loc":{"start":{"line":96,"column":69},"end":{"line":107,"column":5}},"line":96},"11":{"name":"(anonymous_11)","decl":{"start":{"line":108,"column":58},"end":{"line":108,"column":59}},"loc":{"start":{"line":108,"column":93},"end":{"line":117,"column":5}},"line":108},"12":{"name":"(anonymous_12)","decl":{"start":{"line":118,"column":40},"end":{"line":118,"column":41}},"loc":{"start":{"line":118,"column":57},"end":{"line":154,"column":5}},"line":118},"13":{"name":"(anonymous_13)","decl":{"start":{"line":123,"column":21},"end":{"line":123,"column":22}},"loc":{"start":{"line":123,"column":42},"end":{"line":130,"column":13}},"line":123},"14":{"name":"(anonymous_14)","decl":{"start":{"line":155,"column":41},"end":{"line":155,"column":42}},"loc":{"start":{"line":155,"column":60},"end":{"line":196,"column":5}},"line":155},"15":{"name":"(anonymous_15)","decl":{"start":{"line":192,"column":35},"end":{"line":192,"column":36}},"loc":{"start":{"line":192,"column":48},"end":{"line":192,"column":85}},"line":192},"16":{"name":"(anonymous_16)","decl":{"start":{"line":197,"column":38},"end":{"line":197,"column":39}},"loc":{"start":{"line":197,"column":55},"end":{"line":273,"column":5}},"line":197},"17":{"name":"(anonymous_17)","decl":{"start":{"line":232,"column":39},"end":{"line":232,"column":40}},"loc":{"start":{"line":232,"column":52},"end":{"line":232,"column":125}},"line":232},"18":{"name":"(anonymous_18)","decl":{"start":{"line":262,"column":45},"end":{"line":262,"column":46}},"loc":{"start":{"line":262,"column":58},"end":{"line":270,"column":13}},"line":262}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":20},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":21},"end":{"line":2,"column":25}},{"start":{"line":2,"column":29},"end":{"line":2,"column":47}},{"start":{"line":2,"column":52},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":8,"column":5}},{"start":{"line":3,"column":4},"end":{"line":8,"column":5}}],"line":3},"2":{"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":38}},"type":"binary-expr","locations":[{"start":{"line":3,"column":8},"end":{"line":3,"column":12}},{"start":{"line":3,"column":16},"end":{"line":3,"column":38}}],"line":3},"3":{"loc":{"start":{"line":4,"column":8},"end":{"line":7,"column":9}},"type":"if","locations":[{"start":{"line":4,"column":8},"end":{"line":7,"column":9}},{"start":{"line":4,"column":8},"end":{"line":7,"column":9}}],"line":4},"4":{"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":30}},"type":"binary-expr","locations":[{"start":{"line":4,"column":12},"end":{"line":4,"column":14}},{"start":{"line":4,"column":18},"end":{"line":4,"column":30}}],"line":4},"5":{"loc":{"start":{"line":5,"column":12},"end":{"line":5,"column":65}},"type":"if","locations":[{"start":{"line":5,"column":12},"end":{"line":5,"column":65}},{"start":{"line":5,"column":12},"end":{"line":5,"column":65}}],"line":5},"6":{"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":59}},"type":"binary-expr","locations":[{"start":{"line":9,"column":21},"end":{"line":9,"column":23}},{"start":{"line":9,"column":27},"end":{"line":9,"column":59}}],"line":9},"7":{"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":71}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":71}},{"start":{"line":21,"column":8},"end":{"line":21,"column":71}}],"line":21},"8":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},{"start":{"line":22,"column":8},"end":{"line":22,"column":45}}],"line":22},"9":{"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":38}},"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":38}}],"line":41},"10":{"loc":{"start":{"line":50,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":55,"column":13}},{"start":{"line":50,"column":12},"end":{"line":55,"column":13}}],"line":50},"11":{"loc":{"start":{"line":61,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":71,"column":13}},{"start":{"line":61,"column":12},"end":{"line":71,"column":13}}],"line":61},"12":{"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":74}},"type":"binary-expr","locations":[{"start":{"line":61,"column":16},"end":{"line":61,"column":48}},{"start":{"line":61,"column":52},"end":{"line":61,"column":74}}],"line":61},"13":{"loc":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},{"start":{"line":62,"column":16},"end":{"line":67,"column":17}}],"line":62},"14":{"loc":{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":82,"column":13}},{"start":{"line":77,"column":12},"end":{"line":82,"column":13}}],"line":77},"15":{"loc":{"start":{"line":77,"column":16},"end":{"line":77,"column":77}},"type":"binary-expr","locations":[{"start":{"line":77,"column":16},"end":{"line":77,"column":51}},{"start":{"line":77,"column":55},"end":{"line":77,"column":77}}],"line":77},"16":{"loc":{"start":{"line":88,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":93,"column":13}},{"start":{"line":88,"column":12},"end":{"line":93,"column":13}}],"line":88},"17":{"loc":{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":104,"column":13}},{"start":{"line":99,"column":12},"end":{"line":104,"column":13}}],"line":99},"18":{"loc":{"start":{"line":99,"column":16},"end":{"line":99,"column":73}},"type":"binary-expr","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":49}},{"start":{"line":99,"column":53},"end":{"line":99,"column":73}}],"line":99},"19":{"loc":{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":115,"column":13}},{"start":{"line":110,"column":12},"end":{"line":115,"column":13}}],"line":110},"20":{"loc":{"start":{"line":121,"column":8},"end":{"line":152,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":152,"column":9}},{"start":{"line":121,"column":8},"end":{"line":152,"column":9}}],"line":121},"21":{"loc":{"start":{"line":125,"column":20},"end":{"line":127,"column":21}},"type":"if","locations":[{"start":{"line":125,"column":20},"end":{"line":127,"column":21}},{"start":{"line":125,"column":20},"end":{"line":127,"column":21}}],"line":125},"22":{"loc":{"start":{"line":125,"column":24},"end":{"line":125,"column":126}},"type":"binary-expr","locations":[{"start":{"line":125,"column":24},"end":{"line":125,"column":57}},{"start":{"line":125,"column":61},"end":{"line":125,"column":126}}],"line":125},"23":{"loc":{"start":{"line":134,"column":16},"end":{"line":135,"column":29}},"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":135,"column":29}},{"start":{"line":134,"column":16},"end":{"line":135,"column":29}}],"line":134},"24":{"loc":{"start":{"line":134,"column":20},"end":{"line":134,"column":67}},"type":"binary-expr","locations":[{"start":{"line":134,"column":20},"end":{"line":134,"column":44}},{"start":{"line":134,"column":48},"end":{"line":134,"column":67}}],"line":134},"25":{"loc":{"start":{"line":136,"column":16},"end":{"line":149,"column":17}},"type":"if","locations":[{"start":{"line":136,"column":16},"end":{"line":149,"column":17}},{"start":{"line":136,"column":16},"end":{"line":149,"column":17}}],"line":136},"26":{"loc":{"start":{"line":137,"column":20},"end":{"line":148,"column":21}},"type":"if","locations":[{"start":{"line":137,"column":20},"end":{"line":148,"column":21}},{"start":{"line":137,"column":20},"end":{"line":148,"column":21}}],"line":137},"27":{"loc":{"start":{"line":139,"column":25},"end":{"line":148,"column":21}},"type":"if","locations":[{"start":{"line":139,"column":25},"end":{"line":148,"column":21}},{"start":{"line":139,"column":25},"end":{"line":148,"column":21}}],"line":139},"28":{"loc":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},{"start":{"line":158,"column":8},"end":{"line":160,"column":9}}],"line":158},"29":{"loc":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},{"start":{"line":161,"column":8},"end":{"line":163,"column":9}}],"line":161},"30":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164},"31":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{"line":167,"column":8},"end":{"line":169,"column":9}}],"line":167},"32":{"loc":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},{"start":{"line":170,"column":8},"end":{"line":172,"column":9}}],"line":170},"33":{"loc":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},{"start":{"line":173,"column":8},"end":{"line":175,"column":9}}],"line":173},"34":{"loc":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},{"start":{"line":176,"column":8},"end":{"line":178,"column":9}}],"line":176},"35":{"loc":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},{"start":{"line":179,"column":8},"end":{"line":181,"column":9}}],"line":179},"36":{"loc":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},{"start":{"line":182,"column":8},"end":{"line":184,"column":9}}],"line":182},"37":{"loc":{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":187,"column":9}},{"start":{"line":185,"column":8},"end":{"line":187,"column":9}}],"line":185},"38":{"loc":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},{"start":{"line":188,"column":8},"end":{"line":190,"column":9}}],"line":188},"39":{"loc":{"start":{"line":191,"column":8},"end":{"line":194,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":194,"column":9}},{"start":{"line":191,"column":8},"end":{"line":194,"column":9}}],"line":191},"40":{"loc":{"start":{"line":200,"column":8},"end":{"line":200,"column":45}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":45}},{"start":{"line":200,"column":8},"end":{"line":200,"column":45}}],"line":200},"41":{"loc":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},{"start":{"line":201,"column":8},"end":{"line":203,"column":9}}],"line":201},"42":{"loc":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},{"start":{"line":204,"column":8},"end":{"line":206,"column":9}}],"line":204},"43":{"loc":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},{"start":{"line":207,"column":8},"end":{"line":209,"column":9}}],"line":207},"44":{"loc":{"start":{"line":210,"column":8},"end":{"line":212,"column":9}},"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":212,"column":9}},{"start":{"line":210,"column":8},"end":{"line":212,"column":9}}],"line":210},"45":{"loc":{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":218,"column":9}},{"start":{"line":213,"column":8},"end":{"line":218,"column":9}}],"line":213},"46":{"loc":{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},"type":"if","locations":[{"start":{"line":214,"column":12},"end":{"line":216,"column":13}},{"start":{"line":214,"column":12},"end":{"line":216,"column":13}}],"line":214},"47":{"loc":{"start":{"line":219,"column":8},"end":{"line":224,"column":9}},"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":224,"column":9}},{"start":{"line":219,"column":8},"end":{"line":224,"column":9}}],"line":219},"48":{"loc":{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":220,"column":12},"end":{"line":222,"column":13}},{"start":{"line":220,"column":12},"end":{"line":222,"column":13}}],"line":220},"49":{"loc":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},{"start":{"line":229,"column":8},"end":{"line":231,"column":9}}],"line":229},"50":{"loc":{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},{"start":{"line":233,"column":8},"end":{"line":235,"column":9}}],"line":233},"51":{"loc":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},{"start":{"line":236,"column":8},"end":{"line":238,"column":9}}],"line":236},"52":{"loc":{"start":{"line":237,"column":21},"end":{"line":237,"column":115}},"type":"cond-expr","locations":[{"start":{"line":237,"column":44},"end":{"line":237,"column":78}},{"start":{"line":237,"column":81},"end":{"line":237,"column":115}}],"line":237},"53":{"loc":{"start":{"line":239,"column":8},"end":{"line":241,"column":9}},"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":241,"column":9}},{"start":{"line":239,"column":8},"end":{"line":241,"column":9}}],"line":239},"54":{"loc":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},{"start":{"line":242,"column":8},"end":{"line":244,"column":9}}],"line":242},"55":{"loc":{"start":{"line":242,"column":12},"end":{"line":242,"column":72}},"type":"binary-expr","locations":[{"start":{"line":242,"column":12},"end":{"line":242,"column":46}},{"start":{"line":242,"column":50},"end":{"line":242,"column":72}}],"line":242},"56":{"loc":{"start":{"line":243,"column":21},"end":{"line":243,"column":87}},"type":"cond-expr","locations":[{"start":{"line":243,"column":44},"end":{"line":243,"column":64}},{"start":{"line":243,"column":67},"end":{"line":243,"column":87}}],"line":243},"57":{"loc":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},{"start":{"line":245,"column":8},"end":{"line":247,"column":9}}],"line":245},"58":{"loc":{"start":{"line":246,"column":21},"end":{"line":246,"column":87}},"type":"cond-expr","locations":[{"start":{"line":246,"column":44},"end":{"line":246,"column":64}},{"start":{"line":246,"column":67},"end":{"line":246,"column":87}}],"line":246},"59":{"loc":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},{"start":{"line":248,"column":8},"end":{"line":250,"column":9}}],"line":248},"60":{"loc":{"start":{"line":249,"column":21},"end":{"line":249,"column":81}},"type":"cond-expr","locations":[{"start":{"line":249,"column":44},"end":{"line":249,"column":61}},{"start":{"line":249,"column":64},"end":{"line":249,"column":81}}],"line":249},"61":{"loc":{"start":{"line":251,"column":8},"end":{"line":253,"column":9}},"type":"if","locations":[{"start":{"line":251,"column":8},"end":{"line":253,"column":9}},{"start":{"line":251,"column":8},"end":{"line":253,"column":9}}],"line":251},"62":{"loc":{"start":{"line":252,"column":21},"end":{"line":252,"column":117}},"type":"cond-expr","locations":[{"start":{"line":252,"column":44},"end":{"line":252,"column":79}},{"start":{"line":252,"column":82},"end":{"line":252,"column":117}}],"line":252},"63":{"loc":{"start":{"line":254,"column":8},"end":{"line":260,"column":9}},"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":260,"column":9}},{"start":{"line":254,"column":8},"end":{"line":260,"column":9}}],"line":254},"64":{"loc":{"start":{"line":255,"column":21},"end":{"line":259,"column":110}},"type":"cond-expr","locations":[{"start":{"line":257,"column":20},"end":{"line":257,"column":110}},{"start":{"line":259,"column":20},"end":{"line":259,"column":110}}],"line":255},"65":{"loc":{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":271,"column":9}},{"start":{"line":261,"column":8},"end":{"line":271,"column":9}}],"line":261},"66":{"loc":{"start":{"line":264,"column":16},"end":{"line":269,"column":17}},"type":"if","locations":[{"start":{"line":264,"column":16},"end":{"line":269,"column":17}},{"start":{"line":264,"column":16},"end":{"line":269,"column":17}}],"line":264},"67":{"loc":{"start":{"line":264,"column":20},"end":{"line":264,"column":70}},"type":"binary-expr","locations":[{"start":{"line":264,"column":20},"end":{"line":264,"column":43}},{"start":{"line":264,"column":47},"end":{"line":264,"column":70}}],"line":264},"68":{"loc":{"start":{"line":265,"column":29},"end":{"line":265,"column":104}},"type":"cond-expr","locations":[{"start":{"line":265,"column":53},"end":{"line":265,"column":77}},{"start":{"line":265,"column":80},"end":{"line":265,"column":104}}],"line":265}},"s":{"0":1,"1":4,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":4,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":30,"20":29,"21":30,"22":29,"23":30,"24":30,"25":30,"26":30,"27":30,"28":30,"29":30,"30":30,"31":30,"32":30,"33":30,"34":30,"35":1,"36":29,"37":29,"38":1,"39":112,"40":1,"41":31,"42":31,"43":1,"44":5,"45":5,"46":6,"47":3,"48":3,"49":5,"50":1,"51":3,"52":4,"53":4,"54":2,"55":2,"56":0,"57":1,"58":2,"59":2,"60":3,"61":2,"62":1,"63":2,"64":1,"65":2,"66":3,"67":2,"68":1,"69":1,"70":4,"71":4,"72":5,"73":2,"74":3,"75":4,"76":1,"77":5,"78":7,"79":5,"80":2,"81":1,"82":27,"83":27,"84":27,"85":4,"86":8,"87":12,"88":1,"89":7,"90":23,"91":27,"92":0,"93":27,"94":9,"95":9,"96":1,"97":1,"98":1,"99":1,"100":8,"101":8,"102":18,"103":26,"104":1,"105":24,"106":24,"107":24,"108":7,"109":17,"110":1,"111":16,"112":1,"113":15,"114":1,"115":14,"116":2,"117":12,"118":1,"119":11,"120":1,"121":10,"122":1,"123":9,"124":3,"125":6,"126":4,"127":2,"128":1,"129":1,"130":1,"131":2,"132":1,"133":0,"134":1,"135":29,"136":29,"137":28,"138":29,"139":4,"140":29,"141":2,"142":29,"143":20,"144":28,"145":5,"146":28,"147":2,"148":2,"149":2,"150":28,"151":2,"152":0,"153":2,"154":28,"155":28,"156":28,"157":28,"158":1,"159":28,"160":18,"161":28,"162":2,"163":28,"164":5,"165":28,"166":0,"167":28,"168":18,"169":28,"170":2,"171":28,"172":0,"173":28,"174":4,"175":28,"176":2,"177":28,"178":1,"179":1,"180":1,"181":0,"182":1,"183":28,"184":1,"185":1},"f":{"0":4,"1":1,"2":30,"3":29,"4":112,"5":31,"6":5,"7":3,"8":2,"9":2,"10":4,"11":5,"12":27,"13":8,"14":24,"15":2,"16":29,"17":18,"18":1},"b":{"0":[1,1,1],"1":[0,4],"2":[4,4],"3":[0,0],"4":[0,0],"5":[0,0],"6":[4,4],"7":[29,1],"8":[29,1],"9":[112,21],"10":[3,3],"11":[4,0],"12":[4,2],"13":[2,2],"14":[2,1],"15":[3,2],"16":[2,1],"17":[2,3],"18":[5,2],"19":[5,2],"20":[4,23],"21":[1,11],"22":[12,5],"23":[0,27],"24":[27,27],"25":[9,18],"26":[0,9],"27":[1,8],"28":[7,17],"29":[1,16],"30":[1,15],"31":[1,14],"32":[2,12],"33":[1,11],"34":[1,10],"35":[1,9],"36":[3,6],"37":[4,2],"38":[1,1],"39":[1,0],"40":[28,1],"41":[4,25],"42":[2,27],"43":[20,9],"44":[5,23],"45":[2,26],"46":[2,0],"47":[2,26],"48":[0,2],"49":[1,27],"50":[2,26],"51":[5,23],"52":[0,5],"53":[0,28],"54":[18,10],"55":[28,18],"56":[1,17],"57":[2,26],"58":[1,1],"59":[0,28],"60":[0,0],"61":[4,24],"62":[1,3],"63":[2,26],"64":[1,1],"65":[1,27],"66":[0,1],"67":[1,0],"68":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/QueryBuilder.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/QueryBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    AndOperator,\n    AnyOperator,\n    ContainsOperator,\n    EndsWithOperator,\n    EqualsOperator,\n    GreaterThanOperator,\n    GreaterThanOrEqualOperator,\n    HasOperator,\n    LessThanOperator,\n    LessThanOrEqualOperator,\n    NotOperator,\n    OrOperator,\n    StartsWithOperator,\n} from \"./operators/dialect\";\nimport {IComparisonOperator} from \"./IComparisonOperator\";\nimport {IPageInfo} from \"./IPageInfo\";\nimport {IOperator} from \"./IOperator\";\nimport {FindOptionsWhere} from \"./FindOptionsWhere\";\nimport {FindManyOptions} from \"./FindManyOptions\"\nimport {InstanceChecker} from \"./InstanceChecker\";\nimport {SparseFieldSet} from \"./SparseFieldSet\";\nimport {FindOperator} from \"./FindOperator\";\nimport {FindOptionsRelations} from \"./FindOptionsRelations\";\nimport {FindOptionsSelect} from \"./FindOptionsSelect\";\nimport {SparseField} from \"./SparseField\";\nimport {FindOptionsOrder} from \"./FindOptionsOrder\";\nimport {FindOptionsOrderValue} from \"./FindOptionsOrderValue\";\nimport {Sorts} from \"./Sorts\";\nimport {SortField} from \"./SortField\";\n\nexport class QueryBuilder<T> {\n    _operators: Array<IComparisonOperator> = [];\n    _model: string = \"\";\n    _pageInfo: IPageInfo | null = null;\n    _includes: Array<string> = [];\n    _sorts: Sorts | null = null;\n    _fields: SparseFieldSet | null = null;\n    _childQueryBuilder: QueryBuilder<T> | null = null;\n    _childQueryBuilders: QueryBuilder<T>[] = [];\n    _findOptions: FindManyOptions<T>\n\n    constructor(public childQueryBuilder: QueryBuilder<T> | null = null, public model: string = \"\") {\n        this._childQueryBuilder = childQueryBuilder;\n        this._model = model;\n\n    }\n\n    /**\n     * Finds entities that match given find options.\n     */\n    find(options?: FindManyOptions<T>): QueryBuilder<T> {\n        this._findOptions = options\n\n        return this;\n    }\n\n    // /**\n    //  * Finds entities that match given find options.\n    //  */\n    // findBy(\n    //     where: FindOptionsWhere<T> | FindOptionsWhere<T>[],\n    // ): T[] {\n    //     return null;\n    // }\n\n    isNullOrWhiteSpace(input: string) {\n        return !input || !input.trim();\n    }\n\n    hasQuery(uriToBeAppended: string) {\n        let queryIndex = uriToBeAppended.indexOf('?');\n        return queryIndex != -1;\n    }\n\n    protected buildSorts(selects: FindOptionsOrder<T>): Sorts {\n        let fields = new Sorts(this._model)\n        for (let key in selects) {\n            if (typeof selects[key] === \"string\") {\n                fields.addField(new SortField(null, selects[key], [key]))\n            } else {\n                this.getRelationForSorts(selects[key], fields, key)\n            }\n        }\n\n        return fields;\n    }\n\n    private getRelationForSorts(selects, fields, path) {\n        for (let key in selects) {\n            if (typeof selects[key] === \"string\" || selects[key].direction) {\n               if(!selects[key].direction){\n                   fields.addField(new SortField(path, selects[key], [key]))\n               }else{\n                   fields.addField(new SortField(path, selects[key].direction, [key]))\n               }\n            } else {\n                this.getRelationForSorts(selects[key], fields, path + \".\" + key)\n            }\n        }\n    }\n\n    protected buildIncludes(relations: FindOptionsRelations<T>): string[] {\n        let result: string[] = []\n        for (let key in relations) {\n            if (typeof relations[key] === \"boolean\" && relations[key] as boolean == true) {\n                result.push(key)\n            } else {\n                this.getRelationForIncludes(relations[key], result, key)\n            }\n        }\n\n        return result;\n    }\n\n    private getRelationForIncludes(relations, result, path) {\n        for (let key in relations) {\n            if (typeof relations[key] === \"boolean\") {\n                result.push(path + \".\" + key)\n            } else {\n                this.getRelationForIncludes(relations[key], result, path + \".\" + key)\n            }\n        }\n    }\n\n    protected buildSparseFieldsets(selects: FindOptionsSelect<T>): SparseFieldSet {\n        let fields = new SparseFieldSet(this._model)\n        for (let key in selects) {\n            if (typeof selects[key] === \"boolean\" && selects[key] as boolean == true) {\n                fields.addField(new SparseField(null, [key]))\n            } else {\n                this.getRelationForSparseFieldSet(selects[key], fields, key)\n            }\n        }\n\n        return fields;\n    }\n\n    private getRelationForSparseFieldSet(relations, fields: SparseFieldSet, path) {\n        for (let key in relations) {\n            if (typeof relations[key] === \"boolean\") {\n                fields.addField(new SparseField(path, [key]))\n            } else {\n                this.getRelationForSparseFieldSet(relations[key], fields, path + \".\" + key)\n            }\n        }\n    }\n\n    protected buildWhere(\n        where: FindOptionsWhere<any>\n    ): IComparisonOperator[] {\n\n        let operators: Array<IComparisonOperator> = [];\n\n        if (Array.isArray(where)) {\n            operators.push(new OrOperator(...where\n                .map((whereItem) => {\n                    for (let key in whereItem) {\n                        if (typeof whereItem[key] == \"object\" && !InstanceChecker.isFindOperator(whereItem[key])) {\n                            throw Error('You can\\'t do an implicit OR using nested properties')\n                        }\n                    }\n                    return this.buildWhere(\n                        whereItem\n                    )\n                })))\n        } else {\n            for (let key in where) {\n                if (where[key] === undefined || where[key] === null) continue\n\n                if (!InstanceChecker.isFindOperator(where[key])) {\n                    if (where[key] == null) {\n                        //null or undefined\n                    } else if (typeof where[key] == \"object\") {\n                        let cqb = new QueryBuilder(null, key)\n                        cqb.find({where: where[key]})\n                        this._childQueryBuilders.push(cqb)\n                        continue\n                    } else {\n                        operators.push(new EqualsOperator(key, where[key]))\n                        continue\n                    }\n                }\n\n                operators.push(this.getOperator(where[key], key));\n            }\n        }\n\n        return operators;\n    }\n\n    // TODO: refactor this into a factory class\n    getOperator(op: FindOperator<any>, key: string): IComparisonOperator | null {\n\n        let parameterValue = op.value\n\n        if (InstanceChecker.isEqualOperator(op)) {\n            return new EqualsOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isAnyOperator(op)) {\n            return new AnyOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isContainsOperator(op)) {\n            return new ContainsOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isEndsWithOperator(op)) {\n            return new EndsWithOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isGreaterThanOperator(op)) {\n            return new GreaterThanOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isGreaterThanOrEqualOperator(op)) {\n            return new GreaterThanOrEqualOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isLessThanOperator(op)) {\n            return new LessThanOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isLessThanOrEqualOperator(op)) {\n            return new LessThanOrEqualOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isHasOperator(op)) {\n            return new HasOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isNotOperator(op)) {\n            return new NotOperator(this.getOperator((op as FindOperator<any>).child, key))\n        }\n\n        if (InstanceChecker.isStartsWithOperator(op)) {\n            return new StartsWithOperator(key, parameterValue)\n        }\n\n        if (InstanceChecker.isOrOperator(op)) {\n            let ors = (op as FindOperator<any>).value.map(x => this.getOperator(x, key))\n\n            return new OrOperator(...ors)\n        }\n\n        return null;\n    }\n\n    buildNew(final: string = \"\"): string {\n\n        if (this._findOptions.fields) {\n            this._fields = this.buildSparseFieldsets(this._findOptions.fields)\n        }\n\n        if (this._findOptions.relations) {\n            this._includes.push(...this.buildIncludes(this._findOptions.relations))\n        }\n\n        if (this._findOptions.where) {\n            this._operators.push(...this.buildWhere(this._findOptions.where));\n        }\n\n        if (this._findOptions.order) {\n            this._sorts = this.buildSorts(this._findOptions.order)\n        }\n\n        if (this._findOptions.size !== undefined) {\n            if (this._pageInfo === null) {\n                this._pageInfo = {} as IPageInfo\n            }\n            this._pageInfo.size = this._findOptions.size\n        }\n\n        if (this._findOptions.number !== undefined) {\n            if (this._pageInfo === null) {\n                this._pageInfo = {} as IPageInfo\n            }\n            this._pageInfo.number = this._findOptions.number\n        }\n\n        let compiled: string;\n        let includes: string = \"\";\n        let sorts: string = \"\";\n        let filterPropertyExpression: string = \"filter\";\n\n        if (!this.isNullOrWhiteSpace(this._model)) {\n            filterPropertyExpression = `filter[${this._model}]`;\n        }\n\n        compiled = this._operators.map(x => `${filterPropertyExpression}=${x.toString()}`).join('&');\n\n        if (this._includes.length > 0) {\n            includes = \"include=\" + this._includes.join(\",\");\n        }\n\n        if (this._sorts != null) {\n            final += this.hasQuery(final) ? `&${this._sorts.toString()}` : `?${this._sorts.toString()}`;\n        }\n\n        if (this._childQueryBuilder) {\n            final += this._childQueryBuilder.buildNew(final);\n        }\n\n        if (!this.isNullOrWhiteSpace(compiled) && compiled !== 'filter=') {\n            final += this.hasQuery(final) ? `&${compiled}` : `?${compiled}`;\n        }\n\n        if (!this.isNullOrWhiteSpace(includes)) {\n            final += this.hasQuery(final) ? `&${includes}` : `?${includes}`;\n        }\n\n        if (!this.isNullOrWhiteSpace(sorts)) {\n            final += this.hasQuery(final) ? `&${sorts}` : `?${sorts}`;\n        }\n\n        if (this._fields != null) {\n            final += this.hasQuery(final) ? `&${this._fields.toString()}` : `?${this._fields.toString()}`;\n        }\n\n        if (this._pageInfo) {\n            final += this.hasQuery(final)\n                ?\n                `&page[size]=${this._pageInfo.size}&page[number]=${this._pageInfo.number}`\n                :\n                `?page[size]=${this._pageInfo.size}&page[number]=${this._pageInfo.number}`;\n        }\n\n        if (this._childQueryBuilders.length) {\n            this._childQueryBuilders.forEach(x => {\n                let intermediary = x.buildNew(final)\n                if (intermediary[0] !== '?' && intermediary[0] !== '&') {\n                    final += this.hasQuery(final) ? `&${intermediary}` : `?${intermediary}`;\n                } else {\n                    final = intermediary\n                }\n            })\n        }\n\n        return final\n    }\n\n    // build(final: string = \"\"): string {\n    //     let compiled: string;\n    //     let includes: string = \"\";\n    //     let fields: Array<string> = [];\n    //     let filterPropertyExpression: string = \"filter\";\n    //\n    //     if (!this.isNullOrWhiteSpace(this._model)) {\n    //         filterPropertyExpression = `filter[${this._model}]`;\n    //     }\n    //\n    //     compiled = this._operators.map(x => `${filterPropertyExpression}=${x.toString()}`).join('&');\n    //\n    //     if (this._includes.length > 0) {\n    //         includes = \"include=\" + this._includes.join(\",\");\n    //     }\n    //\n    //     if (this._fields) {\n    //         Object.keys(this._fields).forEach(x => {\n    //             let sfs = this._fields[x];\n    //             fields.push(sfs.toString())\n    //         })\n    //     }\n    //\n    //     if (!this.isNullOrWhiteSpace(compiled)) {\n    //         final += this.hasQuery(final) ? `&${compiled}` : `?${compiled}`;\n    //     }\n    //\n    //     if (!this.isNullOrWhiteSpace(includes)) {\n    //         final += this.hasQuery(final) ? `&${includes}` : `?${includes}`;\n    //     }\n    //\n    //     if (fields.length > 0) {\n    //         fields.forEach(x => {\n    //             final += this.hasQuery(final) ? `&${x}` : `?${x}`;\n    //         })\n    //     }\n    //\n    //     if (this._pageInfo) {\n    //         final += this.hasQuery(final)\n    //             ?\n    //             `&page[size]=${this._pageInfo.size}&page[number]=${this._pageInfo.number}`\n    //             :\n    //             `?page[size]=${this._pageInfo.size}&page[number]=${this._pageInfo.number}`;\n    //     }\n    //\n    //     if (this._childQueryBuilder) {\n    //         final += this._childQueryBuilder.build(final);\n    //     }\n    //\n    //     return final\n    // }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b38a22cb9140e785529df876026964116f8eebd8"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/index.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":63}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":53}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":60}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":47}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":55}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":13,"2":13,"3":13,"4":13,"5":13,"6":41,"7":13,"8":0,"9":0,"10":0,"11":1,"12":13,"13":13,"14":13,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1},"f":{"0":13,"1":41,"2":0,"3":13},"b":{"0":[1,1,1],"1":[1,0],"2":[13,0],"3":[13,0],"4":[13,13],"5":[0,13],"6":[13,0],"7":[0,0],"8":[1,1,1],"9":[13,0],"10":[13,13]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/index.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/dialect/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,gDAA6B;AAC7B,gDAA6B;AAC7B,qDAAkC;AAClC,qDAAkC;AAClC,mDAAgC;AAChC,wDAAqC;AACrC,+DAA4C;AAC5C,gDAA6B;AAC7B,qDAAkC;AAClC,4DAAyC;AACzC,gDAA6B;AAC7B,+CAA4B;AAC5B,uDAAoC","sourcesContent":["// @index('./**/*.ts', f => `export * from '${f.path}'`)\nexport * from './AndOperator'\nexport * from './AnyOperator'\nexport * from './ContainsOperator'\nexport * from './EndsWithOperator'\nexport * from './EqualsOperator'\nexport * from './GreaterThanOperator'\nexport * from './GreaterThanOrEqualOperator'\nexport * from './HasOperator'\nexport * from './LessThanOperator'\nexport * from './LessThanOrEqualOperator'\nexport * from './NotOperator'\nexport * from './OrOperator'\nexport * from './StartsWithOperator'\n// @endindex\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73804a24818d1b8caaa360c65b98cdd387f4d1f8"},"/Users/waynedouglas/Source/repos/json-api-query/src/InstanceChecker.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/InstanceChecker.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":23},"end":{"line":52,"column":3}},"3":{"start":{"line":7,"column":4},"end":{"line":9,"column":6}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":85}},"5":{"start":{"line":10,"column":4},"end":{"line":12,"column":6}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":71}},"7":{"start":{"line":13,"column":4},"end":{"line":15,"column":6}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":69}},"9":{"start":{"line":16,"column":4},"end":{"line":18,"column":6}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":74}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":74}},"13":{"start":{"line":22,"column":4},"end":{"line":24,"column":6}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":77}},"15":{"start":{"line":25,"column":4},"end":{"line":27,"column":6}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":80}},"17":{"start":{"line":28,"column":4},"end":{"line":30,"column":6}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":74}},"19":{"start":{"line":31,"column":4},"end":{"line":33,"column":6}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":81}},"21":{"start":{"line":34,"column":4},"end":{"line":36,"column":6}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":69}},"23":{"start":{"line":37,"column":4},"end":{"line":39,"column":6}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":69}},"25":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"26":{"start":{"line":41,"column":8},"end":{"line":41,"column":68}},"27":{"start":{"line":43,"column":4},"end":{"line":45,"column":6}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":76}},"29":{"start":{"line":46,"column":4},"end":{"line":50,"column":6}},"30":{"start":{"line":47,"column":8},"end":{"line":49,"column":53}},"31":{"start":{"line":51,"column":4},"end":{"line":51,"column":27}},"32":{"start":{"line":53,"column":0},"end":{"line":53,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":35},"end":{"line":52,"column":1}},"line":4},"1":{"name":"InstanceChecker","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"loc":{"start":{"line":5,"column":31},"end":{"line":6,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":37},"end":{"line":7,"column":38}},"loc":{"start":{"line":7,"column":52},"end":{"line":9,"column":5}},"line":7},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":38},"end":{"line":10,"column":39}},"loc":{"start":{"line":10,"column":53},"end":{"line":12,"column":5}},"line":10},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":36},"end":{"line":13,"column":37}},"loc":{"start":{"line":13,"column":51},"end":{"line":15,"column":5}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":16,"column":41},"end":{"line":16,"column":42}},"loc":{"start":{"line":16,"column":56},"end":{"line":18,"column":5}},"line":16},"6":{"name":"(anonymous_6)","decl":{"start":{"line":19,"column":41},"end":{"line":19,"column":42}},"loc":{"start":{"line":19,"column":56},"end":{"line":21,"column":5}},"line":19},"7":{"name":"(anonymous_7)","decl":{"start":{"line":22,"column":44},"end":{"line":22,"column":45}},"loc":{"start":{"line":22,"column":59},"end":{"line":24,"column":5}},"line":22},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":51},"end":{"line":25,"column":52}},"loc":{"start":{"line":25,"column":66},"end":{"line":27,"column":5}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":28,"column":41},"end":{"line":28,"column":42}},"loc":{"start":{"line":28,"column":56},"end":{"line":30,"column":5}},"line":28},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":48},"end":{"line":31,"column":49}},"loc":{"start":{"line":31,"column":63},"end":{"line":33,"column":5}},"line":31},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":36},"end":{"line":34,"column":37}},"loc":{"start":{"line":34,"column":51},"end":{"line":36,"column":5}},"line":34},"12":{"name":"(anonymous_12)","decl":{"start":{"line":37,"column":36},"end":{"line":37,"column":37}},"loc":{"start":{"line":37,"column":51},"end":{"line":39,"column":5}},"line":37},"13":{"name":"(anonymous_13)","decl":{"start":{"line":40,"column":35},"end":{"line":40,"column":36}},"loc":{"start":{"line":40,"column":50},"end":{"line":42,"column":5}},"line":40},"14":{"name":"(anonymous_14)","decl":{"start":{"line":43,"column":43},"end":{"line":43,"column":44}},"loc":{"start":{"line":43,"column":58},"end":{"line":45,"column":5}},"line":43},"15":{"name":"(anonymous_15)","decl":{"start":{"line":46,"column":28},"end":{"line":46,"column":29}},"loc":{"start":{"line":46,"column":49},"end":{"line":50,"column":5}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":83}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},{"start":{"line":8,"column":51},"end":{"line":8,"column":83}}],"line":8},"1":{"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":70}},"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":46}},{"start":{"line":11,"column":50},"end":{"line":11,"column":70}}],"line":11},"2":{"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":68}},"type":"binary-expr","locations":[{"start":{"line":14,"column":15},"end":{"line":14,"column":46}},{"start":{"line":14,"column":50},"end":{"line":14,"column":68}}],"line":14},"3":{"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":73}},"type":"binary-expr","locations":[{"start":{"line":17,"column":15},"end":{"line":17,"column":46}},{"start":{"line":17,"column":50},"end":{"line":17,"column":73}}],"line":17},"4":{"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":73}},"type":"binary-expr","locations":[{"start":{"line":20,"column":15},"end":{"line":20,"column":46}},{"start":{"line":20,"column":50},"end":{"line":20,"column":73}}],"line":20},"5":{"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":76}},"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":46}},{"start":{"line":23,"column":50},"end":{"line":23,"column":76}}],"line":23},"6":{"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":79}},"type":"binary-expr","locations":[{"start":{"line":26,"column":15},"end":{"line":26,"column":46}},{"start":{"line":26,"column":50},"end":{"line":26,"column":79}}],"line":26},"7":{"loc":{"start":{"line":29,"column":15},"end":{"line":29,"column":73}},"type":"binary-expr","locations":[{"start":{"line":29,"column":15},"end":{"line":29,"column":46}},{"start":{"line":29,"column":50},"end":{"line":29,"column":73}}],"line":29},"8":{"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":80}},"type":"binary-expr","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":46}},{"start":{"line":32,"column":50},"end":{"line":32,"column":80}}],"line":32},"9":{"loc":{"start":{"line":35,"column":15},"end":{"line":35,"column":68}},"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":46}},{"start":{"line":35,"column":50},"end":{"line":35,"column":68}}],"line":35},"10":{"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":68}},"type":"binary-expr","locations":[{"start":{"line":38,"column":15},"end":{"line":38,"column":46}},{"start":{"line":38,"column":50},"end":{"line":38,"column":68}}],"line":38},"11":{"loc":{"start":{"line":41,"column":15},"end":{"line":41,"column":67}},"type":"binary-expr","locations":[{"start":{"line":41,"column":15},"end":{"line":41,"column":46}},{"start":{"line":41,"column":50},"end":{"line":41,"column":67}}],"line":41},"12":{"loc":{"start":{"line":44,"column":15},"end":{"line":44,"column":75}},"type":"binary-expr","locations":[{"start":{"line":44,"column":15},"end":{"line":44,"column":46}},{"start":{"line":44,"column":50},"end":{"line":44,"column":75}}],"line":44},"13":{"loc":{"start":{"line":47,"column":16},"end":{"line":49,"column":51}},"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":39}},{"start":{"line":48,"column":12},"end":{"line":48,"column":24}},{"start":{"line":49,"column":12},"end":{"line":49,"column":51}}],"line":47}},"s":{"0":1,"1":1,"2":1,"3":1,"4":65,"5":1,"6":24,"7":1,"8":17,"9":1,"10":16,"11":1,"12":15,"13":1,"14":14,"15":1,"16":12,"17":1,"18":11,"19":1,"20":10,"21":1,"22":9,"23":1,"24":6,"25":1,"26":1,"27":1,"28":2,"29":1,"30":237,"31":1,"32":1},"f":{"0":1,"1":0,"2":65,"3":24,"4":17,"5":16,"6":15,"7":14,"8":12,"9":11,"10":10,"11":9,"12":6,"13":1,"14":2,"15":237},"b":{"0":[65,35],"1":[24,24],"2":[17,17],"3":[16,16],"4":[15,15],"5":[14,14],"6":[12,12],"7":[11,11],"8":[10,10],"9":[9,9],"10":[6,6],"11":[1,1],"12":[2,2],"13":[237,183,183]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/InstanceChecker.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/InstanceChecker.ts"],"names":[],"mappings":";;;AAGA;IAAA;IA8DA,CAAC;IA7DU,8BAAc,GAArB,UAAsB,GAAY;QAC9B,OAAO,CACH,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CACtE,CAAA;IACL,CAAC;IAEM,+BAAe,GAAtB,UAAuB,GAAY;QAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,OAAO,CAAA;IAC1F,CAAC;IAEM,6BAAa,GAApB,UAAqB,GAAY;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,KAAK,CAAA;IACxF,CAAC;IAEM,kCAAkB,GAAzB,UAA0B,GAAY;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,UAAU,CAAA;IAC7F,CAAC;IAEM,kCAAkB,GAAzB,UAA0B,GAAY;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,UAAU,CAAA;IAC7F,CAAC;IAEM,qCAAqB,GAA5B,UAA6B,GAAY;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,aAAa,CAAA;IAChG,CAAC;IAEM,4CAA4B,GAAnC,UAAoC,GAAY;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,gBAAgB,CAAA;IACnG,CAAC;IAEM,kCAAkB,GAAzB,UAA0B,GAAY;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,UAAU,CAAA;IAC7F,CAAC;IAEM,yCAAyB,GAAhC,UAAiC,GAAY;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,iBAAiB,CAAA;IACpG,CAAC;IAEM,6BAAa,GAApB,UAAqB,GAAY;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,KAAK,CAAA;IACxF,CAAC;IAEM,6BAAa,GAApB,UAAqB,GAAY;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,KAAK,CAAA;IACxF,CAAC;IAEM,4BAAY,GAAnB,UAAoB,GAAY;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,IAAI,CAAA;IACvF,CAAC;IAEM,oCAAoB,GAA3B,UAA4B,GAAY;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,cAAc,CAAC,IAAK,GAAyB,CAAC,IAAI,KAAM,YAAY,CAAA;IAC/F,CAAC;IAEc,qBAAK,GAApB,UAAqB,GAAY,EAAE,IAAY;QAC3C,OAAO,CACH,OAAO,GAAG,KAAK,QAAQ;YACvB,GAAG,KAAK,IAAI;YACX,GAAiC,CAAC,aAAa,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CACzE,CAAA;IACL,CAAC;IACL,sBAAC;AAAD,CAAC,AA9DD,IA8DC;AA9DY,0CAAe","sourcesContent":["import {FindOperator} from \"./FindOperator\";\nimport {EqualOperator} from \"./EqualOperator\";\n\nexport class InstanceChecker {\n    static isFindOperator(obj: unknown): obj is FindOperator<any> {\n        return (\n            this.check(obj, \"FindOperator\") || this.check(obj, \"EqualOperator\")\n        )\n    }\n\n    static isEqualOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"equal\"\n    }\n\n    static isAnyOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"any\"\n    }\n\n    static isContainsOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"contains\"\n    }\n\n    static isEndsWithOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"endsWith\"\n    }\n\n    static isGreaterThanOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"greaterThan\"\n    }\n\n    static isGreaterThanOrEqualOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"greaterOrEqual\"\n    }\n\n    static isLessThanOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"lessThan\"\n    }\n\n    static isLessThanOrEqualOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"lessThanOrEqual\"\n    }\n\n    static isHasOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"has\"\n    }\n\n    static isNotOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"not\"\n    }\n\n    static isOrOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"or\"\n    }\n\n    static isStartsWithOperator(obj: unknown): obj is EqualOperator<any> {\n        return this.check(obj, \"FindOperator\") && (obj as FindOperator<any>).type  === \"startsWith\"\n    }\n\n    private static check(obj: unknown, name: string) {\n        return (\n            typeof obj === \"object\" &&\n            obj !== null &&\n            (obj as { \"@instanceof\": Symbol })[\"@instanceof\"] === Symbol.for(name)\n        )\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e29526dce64541b48853682eccef54bd6398f39d"},"/Users/waynedouglas/Source/repos/json-api-query/src/SparseFieldSet.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/SparseFieldSet.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":22},"end":{"line":27,"column":3}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":43}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"10":{"start":{"line":14,"column":4},"end":{"line":22,"column":6}},"11":{"start":{"line":15,"column":19},"end":{"line":15,"column":94}},"12":{"start":{"line":15,"column":53},"end":{"line":15,"column":91}},"13":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"14":{"start":{"line":17,"column":12},"end":{"line":17,"column":44}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":24}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"17":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"18":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"19":{"start":{"line":24,"column":8},"end":{"line":24,"column":80}},"20":{"start":{"line":24,"column":46},"end":{"line":24,"column":66}},"21":{"start":{"line":26,"column":4},"end":{"line":26,"column":26}},"22":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":22},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":34},"end":{"line":27,"column":1}},"line":4},"1":{"name":"SparseFieldSet","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":27}},"loc":{"start":{"line":5,"column":39},"end":{"line":13,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":40},"end":{"line":14,"column":41}},"loc":{"start":{"line":14,"column":57},"end":{"line":22,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":38},"end":{"line":15,"column":39}},"loc":{"start":{"line":15,"column":51},"end":{"line":15,"column":93}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":40},"end":{"line":23,"column":41}},"loc":{"start":{"line":23,"column":52},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":31},"end":{"line":24,"column":32}},"loc":{"start":{"line":24,"column":44},"end":{"line":24,"column":68}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},{"start":{"line":16,"column":8},"end":{"line":19,"column":9}}],"line":16},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":44}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},{"start":{"line":16,"column":29},"end":{"line":16,"column":44}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":4,"6":0,"7":4,"8":4,"9":4,"10":1,"11":7,"12":4,"13":7,"14":0,"15":0,"16":7,"17":7,"18":1,"19":4,"20":7,"21":1,"22":1},"f":{"0":1,"1":4,"2":7,"3":4,"4":4,"5":7},"b":{"0":[0,7],"1":[7,7]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/SparseFieldSet.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/SparseFieldSet.ts"],"names":[],"mappings":";;;AAEA;IAII,wBAAmB,SAAwB;QAAE,gBAA6B;aAA7B,UAA6B,EAA7B,qBAA6B,EAA7B,IAA6B;YAA7B,+BAA6B;;QAAvD,cAAS,GAAT,SAAS,CAAe;QACvC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAkB;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,EAA9B,CAA8B,CAAC,CAAA;QACjE,IAAK,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;YAClC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAChC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iCAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,QAAQ,EAAE,EAAZ,CAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACrD,CAAC;IACL,qBAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,wCAAc","sourcesContent":["import {SparseField} from \"./SparseField\";\n\nexport class SparseFieldSet {\n    model: string | null;\n    params: Array<SparseField>;\n    \n    constructor(public modelName: string | null, ...params: Array<SparseField>) { \n        this.model = modelName;\n        this.params = params;\n    }\n\n    addField(field: SparseField): SparseFieldSet {\n        let find = this.params.filter( x=>x.modelName == field.modelName)\n        if ( find !== null && find.length > 0){\n            find[0].addFields(field.fields);\n            return this;\n        }\n        \n        this.params.push(field);\n        return this;\n    }\n\n    toString(): string {\n        return this.params.map(x=>x.toString()).join('&')\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cbc4e0ffab867936abd1cb16e6a6371e93f94105"},"/Users/waynedouglas/Source/repos/json-api-query/src/SparseField.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/SparseField.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":19},"end":{"line":27,"column":3}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":29}},"5":{"start":{"line":9,"column":4},"end":{"line":12,"column":6}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":20}},"8":{"start":{"line":13,"column":4},"end":{"line":17,"column":6}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":50}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":20}},"11":{"start":{"line":18,"column":4},"end":{"line":25,"column":6}},"12":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":88}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":59}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":23}},"16":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":31},"end":{"line":27,"column":1}},"line":4},"1":{"name":"SparseField","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":40},"end":{"line":8,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":37},"end":{"line":9,"column":38}},"loc":{"start":{"line":9,"column":54},"end":{"line":12,"column":5}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":38},"end":{"line":13,"column":39}},"loc":{"start":{"line":13,"column":56},"end":{"line":17,"column":5}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":37},"end":{"line":18,"column":38}},"loc":{"start":{"line":18,"column":49},"end":{"line":25,"column":5}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},{"start":{"line":19,"column":8},"end":{"line":24,"column":9}}],"line":19}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":7,"13":5,"14":2,"15":1,"16":1},"f":{"0":1,"1":7,"2":0,"3":0,"4":7},"b":{"0":[5,2]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/SparseField.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/SparseField.ts"],"names":[],"mappings":";;;AAAA;IAII,qBAAY,KAAoB,EAAE,MAAqB;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACvB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,+BAAS,GAAT,UAAU,MAAqB;;QAC3B,CAAA,KAAA,IAAI,CAAC,MAAM,CAAA,CAAC,IAAI,WAAI,MAAM,EAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,8BAAQ,GAAR;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,iBAAU,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;SAC/D;aAAM;YACH,OAAO,iBAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;SAC5C;IACL,CAAC;IACL,kBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,kCAAW","sourcesContent":["export class SparseField {\n    modelName: string | null;\n    fields: Array<string>;\n\n    constructor(model: string | null, fields: Array<string>) {\n        this.modelName = model;\n        this.fields = fields;\n    }\n\n    addField(field: string): SparseField {\n        this.fields.push(field)\n        return this;\n    }\n\n    addFields(fields: Array<string>): SparseField {\n        this.fields.push(...fields)\n        return this;\n    }\n\n    toString(): string {\n        if (this.modelName) {\n            return `fields[${this.modelName}]=${this.fields.join(',')}`;\n        } else {\n            return `fields=${this.fields.join(',')}`;\n        }\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44b31f2c57819aeca32783c8bd546dcf57308dc7"},"/Users/waynedouglas/Source/repos/json-api-query/src/Sorts.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/Sorts.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":13},"end":{"line":27,"column":3}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":23}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":43}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"10":{"start":{"line":14,"column":4},"end":{"line":22,"column":6}},"11":{"start":{"line":15,"column":19},"end":{"line":15,"column":94}},"12":{"start":{"line":15,"column":53},"end":{"line":15,"column":91}},"13":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"14":{"start":{"line":17,"column":12},"end":{"line":17,"column":87}},"15":{"start":{"line":17,"column":48},"end":{"line":17,"column":83}},"16":{"start":{"line":18,"column":12},"end":{"line":18,"column":24}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"19":{"start":{"line":23,"column":4},"end":{"line":25,"column":6}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":80}},"21":{"start":{"line":24,"column":46},"end":{"line":24,"column":66}},"22":{"start":{"line":26,"column":4},"end":{"line":26,"column":17}},"23":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":13},"end":{"line":4,"column":14}},"loc":{"start":{"line":4,"column":25},"end":{"line":27,"column":1}},"line":4},"1":{"name":"Sorts","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":30},"end":{"line":13,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":31},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":48},"end":{"line":22,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":38},"end":{"line":15,"column":39}},"loc":{"start":{"line":15,"column":51},"end":{"line":15,"column":93}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":33},"end":{"line":17,"column":34}},"loc":{"start":{"line":17,"column":46},"end":{"line":17,"column":85}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":43},"end":{"line":25,"column":5}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":31},"end":{"line":24,"column":32}},"loc":{"start":{"line":24,"column":44},"end":{"line":24,"column":68}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},{"start":{"line":16,"column":8},"end":{"line":19,"column":9}}],"line":16},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":44}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},{"start":{"line":16,"column":29},"end":{"line":16,"column":44}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":0,"7":5,"8":5,"9":5,"10":1,"11":7,"12":3,"13":7,"14":1,"15":1,"16":1,"17":6,"18":6,"19":1,"20":5,"21":6,"22":1,"23":1},"f":{"0":1,"1":5,"2":7,"3":3,"4":1,"5":5,"6":6},"b":{"0":[1,6],"1":[7,7]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/Sorts.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/Sorts.ts"],"names":[],"mappings":";;;AAEA;IAII,eAAmB,SAAwB;QAAE,gBAA2B;aAA3B,UAA2B,EAA3B,qBAA2B,EAA3B,IAA2B;YAA3B,+BAA2B;;QAArD,cAAS,GAAT,SAAS,CAAe;QACvC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,wBAAQ,GAAR,UAAS,KAAgB;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,EAA9B,CAA8B,CAAC,CAAA;QAClE,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAE,OAAA,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,EAA3B,CAA2B,CAAC,CAAA;YAEpD,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,wBAAQ,GAAR;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,EAAE,EAAZ,CAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IACvD,CAAC;IACL,YAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,sBAAK","sourcesContent":["import {SortField} from \"./SortField\";\n\nexport class Sorts {\n    model: string | null;\n    params: Array<SortField>;\n\n    constructor(public modelName: string | null, ...params: Array<SortField>) {\n        this.model = modelName;\n        this.params = params;\n    }\n\n    addField(field: SortField): Sorts {\n        let find = this.params.filter(x => x.modelName == field.modelName)\n        if (find !== null && find.length > 0) {\n            field.fields.forEach(x=>find[0].addField(x, \"desc\"))\n            // find[0].addFields(field.fields);\n            return this;\n        }\n\n        this.params.push(field);\n        return this;\n    }\n\n    toString(): string {\n        return this.params.map(x => x.toString()).join('&')\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"62b9b3b57d06c9016feeb09eda48875c0bca7372"},"/Users/waynedouglas/Source/repos/json-api-query/src/SortField.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/SortField.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":30,"column":3}},"3":{"start":{"line":6,"column":20},"end":{"line":6,"column":24}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":72}},"7":{"start":{"line":9,"column":38},"end":{"line":9,"column":68}},"8":{"start":{"line":11,"column":4},"end":{"line":20,"column":6}},"9":{"start":{"line":12,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":14,"column":16},"end":{"line":14,"column":52}},"11":{"start":{"line":15,"column":16},"end":{"line":15,"column":22}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"14":{"start":{"line":21,"column":4},"end":{"line":28,"column":6}},"15":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":86}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":57}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":29},"end":{"line":30,"column":1}},"line":4},"1":{"name":"SortField","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":43},"end":{"line":10,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":36},"end":{"line":9,"column":70}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":35},"end":{"line":11,"column":36}},"loc":{"start":{"line":11,"column":57},"end":{"line":20,"column":5}},"line":11},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":35},"end":{"line":21,"column":36}},"loc":{"start":{"line":21,"column":47},"end":{"line":28,"column":5}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":18,"column":9}},"type":"switch","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":22}},{"start":{"line":16,"column":12},"end":{"line":17,"column":40}}],"line":12},"1":{"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":33}},"type":"binary-expr","locations":[{"start":{"line":13,"column":17},"end":{"line":13,"column":23}},{"start":{"line":13,"column":27},"end":{"line":13,"column":33}}],"line":13},"2":{"loc":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},{"start":{"line":22,"column":8},"end":{"line":27,"column":9}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":7,"6":7,"7":7,"8":1,"9":8,"10":1,"11":1,"12":7,"13":8,"14":1,"15":6,"16":3,"17":3,"18":1,"19":1},"f":{"0":1,"1":7,"2":7,"3":8,"4":6},"b":{"0":[1,7],"1":[8,0],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/SortField.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/SortField.ts"],"names":[],"mappings":";;;AAGA;IAII,mBAAY,KAAoB,EAAE,GAA0B,EAAE,MAAqB;QAAnF,iBAGC;QALD,WAAM,GAAkB,EAAE,CAAC;QAGvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAG,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAA;IAC7C,CAAC;IAED,4BAAQ,GAAR,UAAS,KAAa,EAAE,GAA0B;QAC9C,QAAQ,GAAG,EAAC;YACR,KAAK,MAAM,IAAI,MAAM;gBACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAI,KAAK,CAAE,CAAC,CAAA;gBAC7B,MAAM;YACV;gBACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;SAC9B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,4BAAQ,GAAR;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,eAAQ,IAAI,CAAC,SAAS,eAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;SAC7D;aAAM;YACH,OAAO,eAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;SAC1C;IACL,CAAC;IACL,gBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,8BAAS","sourcesContent":["import {SparseField} from \"./SparseField\";\nimport {FindOptionsOrderValue} from \"./FindOptionsOrderValue\";\n\nexport class SortField {\n    modelName: string | null;\n    fields: Array<string> = [];\n\n    constructor(model: string | null, dir: FindOptionsOrderValue, fields: Array<string>) {\n        this.modelName = model;\n        fields.forEach(x=> this.addField(x, dir))\n    }\n\n    addField(field: string, dir: FindOptionsOrderValue): SortField {\n        switch (dir){\n            case \"desc\" || \"DESC\":\n                this.fields.push(`-${field}`)\n                break;\n            default:\n                this.fields.push(field)\n        }\n        return this;\n    }\n\n    toString(): string {\n        if (this.modelName) {\n            return `sort[${this.modelName}]=${this.fields.join(',')}`;\n        } else {\n            return `sort=${this.fields.join(',')}`;\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8481a9d191193f84536b719e8aeb786467f45a83"},"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/Expression.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/Expression.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":18},"end":{"line":47,"column":3}},"5":{"start":{"line":9,"column":4},"end":{"line":15,"column":6}},"6":{"start":{"line":10,"column":20},"end":{"line":10,"column":60}},"7":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":82}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":55}},"10":{"start":{"line":16,"column":4},"end":{"line":44,"column":6}},"11":{"start":{"line":17,"column":20},"end":{"line":17,"column":60}},"12":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":82}},"14":{"start":{"line":21,"column":19},"end":{"line":21,"column":27}},"15":{"start":{"line":23,"column":8},"end":{"line":42,"column":11}},"16":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"17":{"start":{"line":25,"column":16},"end":{"line":25,"column":65}},"18":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"19":{"start":{"line":28,"column":16},"end":{"line":28,"column":68}},"20":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"21":{"start":{"line":31,"column":16},"end":{"line":31,"column":67}},"22":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"23":{"start":{"line":34,"column":16},"end":{"line":34,"column":74}},"24":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"25":{"start":{"line":37,"column":16},"end":{"line":37,"column":70}},"26":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"27":{"start":{"line":40,"column":16},"end":{"line":40,"column":77}},"28":{"start":{"line":43,"column":8},"end":{"line":43,"column":23}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":58}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"31":{"start":{"line":48,"column":0},"end":{"line":48,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":18},"end":{"line":6,"column":19}},"loc":{"start":{"line":6,"column":30},"end":{"line":47,"column":1}},"line":6},"1":{"name":"Expression","decl":{"start":{"line":7,"column":13},"end":{"line":7,"column":23}},"loc":{"start":{"line":7,"column":26},"end":{"line":8,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":22},"end":{"line":9,"column":23}},"loc":{"start":{"line":9,"column":38},"end":{"line":15,"column":5}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":26},"end":{"line":16,"column":27}},"loc":{"start":{"line":16,"column":42},"end":{"line":44,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":22},"end":{"line":23,"column":23}},"loc":{"start":{"line":23,"column":38},"end":{"line":42,"column":9}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"2":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24},"3":{"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":73}},"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":48}},{"start":{"line":24,"column":52},"end":{"line":24,"column":73}}],"line":24},"4":{"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},{"start":{"line":27,"column":12},"end":{"line":29,"column":13}}],"line":27},"5":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":73}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":48}},{"start":{"line":27,"column":52},"end":{"line":27,"column":73}}],"line":27},"6":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"7":{"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":72}},"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":48}},{"start":{"line":30,"column":52},"end":{"line":30,"column":72}}],"line":30},"8":{"loc":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},{"start":{"line":33,"column":12},"end":{"line":35,"column":13}}],"line":33},"9":{"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":73}},"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":48}},{"start":{"line":33,"column":52},"end":{"line":33,"column":73}}],"line":33},"10":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{"line":36,"column":12},"end":{"line":38,"column":13}}],"line":36},"11":{"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":72}},"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":48}},{"start":{"line":36,"column":52},"end":{"line":36,"column":72}}],"line":36},"12":{"loc":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},{"start":{"line":39,"column":12},"end":{"line":41,"column":13}}],"line":39},"13":{"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":73}},"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":48}},{"start":{"line":39,"column":52},"end":{"line":39,"column":73}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/Expression.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/Utils/Expression.ts"],"names":[],"mappings":";;;AAAA,iCAAmC;AACnC,mDAAkD;AAElD;IAAA;IAmDA,CAAC;IAhDiB,eAAI,GAAlB,UAAsB,IAAmB;QACrC,IAAM,KAAK,GAAoB,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;QACxE,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACzE;QACD,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAEa,mBAAQ,GAAtB,UAA0B,IAAmB;QAEzC,IAAM,KAAK,GAAoB,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;QAExE,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACzE;QAED,IAAI,IAAI,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,OAAuB,CAAC;QAG5B,OAAO,CAAC,IAAI,EAAE,UAAU,IAAS;YAC7B,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBAC3D,OAAO,GAAG,+BAAc,CAAC,MAAM,CAAC;aACnC;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBAC3D,OAAO,GAAG,+BAAc,CAAC,SAAS,CAAC;aACtC;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;gBAC1D,OAAO,GAAG,+BAAc,CAAC,QAAQ,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBAC3D,OAAO,GAAG,+BAAc,CAAC,eAAe,CAAC;aAC5C;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;gBAC1D,OAAO,GAAG,+BAAc,CAAC,WAAW,CAAC;aACxC;YAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBAC3D,OAAO,GAAG,+BAAc,CAAC,kBAAkB,CAAC;aAC/C;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACnB,CAAC;IAjDuB,wBAAa,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC;IAkDvE,iBAAC;CAAA,AAnDD,IAmDC;AAnDqB,gCAAU","sourcesContent":["import * as falafel from 'falafel';\nimport { ExpressionType } from \"./ExpressionType\";\n\nexport abstract class Expression {\n    private static readonly pathExtractor = new RegExp('return (.*);');\n\n    public static path<T>(name: (t: T) => any) {\n        const match: RegExpExecArray = Expression.pathExtractor.exec(name + '');\n        if (match == null) {\n            throw new Error('The function does not contain a statement matching');\n        }\n        return match[1].split('.').splice(1).join('.');\n    }\n\n    public static operator<T>(name: (t: T) => any) {\n\n        const match: RegExpExecArray = Expression.pathExtractor.exec(name + '');\n\n        if (match == null) {\n            throw new Error('The function does not contain a statement matching');\n        }\n\n        let expr: string = match[1];\n        let expType: ExpressionType;\n\n\n        falafel(expr, function (node: any) {\n            if (node.type === 'BinaryExpression' && node.operator == \"==\") {\n                expType = ExpressionType.Equals;\n            }\n\n            if (node.type === 'BinaryExpression' && node.operator == \"!=\") {\n                expType = ExpressionType.NotEquals;\n            }\n\n            if (node.type === 'BinaryExpression' && node.operator == \"<\") {\n                expType = ExpressionType.LessThan;\n            }\n\n            if (node.type === 'BinaryExpression' && node.operator == \"<=\") {\n                expType = ExpressionType.LessThanOrEqual;\n            }\n\n            if (node.type === 'BinaryExpression' && node.operator == \">\") {\n                expType = ExpressionType.GreaterThan;\n            }\n\n            if (node.type === 'BinaryExpression' && node.operator == \">=\") {\n                expType = ExpressionType.GreaterThanOrEqual;\n            }\n        });\n\n        return expType;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"188f57ee59668e982ab8f7da37f0e57ee1b1e96d"},"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/ExpressionType.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/ExpressionType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":77}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":60}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":66}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":64}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":78}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":70}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":84}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":27},"end":{"line":12,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":20},"end":{"line":12,"column":75}},"type":"binary-expr","locations":[{"start":{"line":12,"column":20},"end":{"line":12,"column":42}},{"start":{"line":12,"column":47},"end":{"line":12,"column":74}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/Utils/ExpressionType.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/Utils/ExpressionType.ts"],"names":[],"mappings":";;;AAAA,IAAY,cAOX;AAPD,WAAY,cAAc;IACtB,uDAAU,CAAA;IACV,6DAAa,CAAA;IACb,2DAAY,CAAA;IACZ,yEAAmB,CAAA;IACnB,iEAAe,CAAA;IACf,+EAAsB,CAAA;AAC1B,CAAC,EAPW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAOzB","sourcesContent":["export enum ExpressionType {\n    Equals = 1,\n    NotEquals = 2,\n    LessThan = 3,\n    LessThanOrEqual = 4,\n    GreaterThan = 5,\n    GreaterThanOrEqual = 6\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0c0dcca99624d454b375fdea98828faeee2ccae"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhereProperty.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhereProperty.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhereProperty.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhereProperty.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOperator} from \"./FindOperator\";\nimport {EqualOperator} from \"./EqualOperator\";\nimport {FindOptionsWhere} from \"./FindOptionsWhere\";\n\n/**\n * A single property handler for FindOptionsWere.\n */\nexport type FindOptionsWhereProperty<Property> = Property extends Promise<infer I>\n    ? FindOptionsWhereProperty<NonNullable<I>>\n    : Property extends Array<infer I>\n        ? FindOptionsWhereProperty<NonNullable<I>>\n        : Property extends Function\n            ? Property | FindOperator<Property>\n            : Property extends Date\n                ? Property | FindOperator<Property>\n                : Property extends object\n                    ?\n                    | FindOptionsWhere<Property>\n                    | FindOptionsWhere<Property>[]\n                    | EqualOperator<Property>\n                    | FindOperator<any>\n                    | boolean\n                    : Property | FindOperator<Property>\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fd0361b6bf233a6beda1701c28995a9011322ed7"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":20},"end":{"line":69,"column":3}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":61}},"5":{"start":{"line":7,"column":39},"end":{"line":7,"column":59}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":74}},"7":{"start":{"line":8,"column":45},"end":{"line":8,"column":72}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":57}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":26}},"10":{"start":{"line":11,"column":8},"end":{"line":11,"column":28}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":42}},"12":{"start":{"line":13,"column":8},"end":{"line":13,"column":54}},"13":{"start":{"line":14,"column":8},"end":{"line":14,"column":64}},"14":{"start":{"line":16,"column":4},"end":{"line":24,"column":7}},"15":{"start":{"line":18,"column":12},"end":{"line":19,"column":48}},"16":{"start":{"line":19,"column":16},"end":{"line":19,"column":48}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":38}},"18":{"start":{"line":25,"column":4},"end":{"line":33,"column":7}},"19":{"start":{"line":27,"column":12},"end":{"line":28,"column":54}},"20":{"start":{"line":28,"column":16},"end":{"line":28,"column":54}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":44}},"22":{"start":{"line":34,"column":4},"end":{"line":40,"column":7}},"23":{"start":{"line":36,"column":12},"end":{"line":36,"column":30}},"24":{"start":{"line":41,"column":4},"end":{"line":49,"column":7}},"25":{"start":{"line":43,"column":12},"end":{"line":44,"column":41}},"26":{"start":{"line":44,"column":16},"end":{"line":44,"column":41}},"27":{"start":{"line":45,"column":12},"end":{"line":45,"column":31}},"28":{"start":{"line":50,"column":4},"end":{"line":58,"column":7}},"29":{"start":{"line":52,"column":12},"end":{"line":53,"column":59}},"30":{"start":{"line":53,"column":16},"end":{"line":53,"column":59}},"31":{"start":{"line":54,"column":12},"end":{"line":54,"column":49}},"32":{"start":{"line":59,"column":4},"end":{"line":67,"column":7}},"33":{"start":{"line":61,"column":12},"end":{"line":62,"column":35}},"34":{"start":{"line":62,"column":16},"end":{"line":62,"column":35}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":29}},"36":{"start":{"line":68,"column":4},"end":{"line":68,"column":24}},"37":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":20},"end":{"line":5,"column":21}},"loc":{"start":{"line":5,"column":32},"end":{"line":69,"column":1}},"line":5},"1":{"name":"FindOperator","decl":{"start":{"line":6,"column":13},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":98},"end":{"line":15,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":13},"end":{"line":17,"column":14}},"loc":{"start":{"line":17,"column":25},"end":{"line":21,"column":9}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":13},"end":{"line":26,"column":14}},"loc":{"start":{"line":26,"column":25},"end":{"line":30,"column":9}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":13},"end":{"line":35,"column":14}},"loc":{"start":{"line":35,"column":25},"end":{"line":37,"column":9}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":13},"end":{"line":42,"column":14}},"loc":{"start":{"line":42,"column":25},"end":{"line":46,"column":9}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":13},"end":{"line":51,"column":14}},"loc":{"start":{"line":51,"column":25},"end":{"line":55,"column":9}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":60,"column":13},"end":{"line":60,"column":14}},"loc":{"start":{"line":60,"column":25},"end":{"line":64,"column":9}},"line":60}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":7,"column":61}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":61}},{"start":{"line":7,"column":8},"end":{"line":7,"column":61}}],"line":7},"1":{"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":74}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":8,"column":74}},{"start":{"line":8,"column":8},"end":{"line":8,"column":74}}],"line":8},"2":{"loc":{"start":{"line":18,"column":12},"end":{"line":19,"column":48}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":19,"column":48}},{"start":{"line":18,"column":12},"end":{"line":19,"column":48}}],"line":18},"3":{"loc":{"start":{"line":27,"column":12},"end":{"line":28,"column":54}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":28,"column":54}},{"start":{"line":27,"column":12},"end":{"line":28,"column":54}}],"line":27},"4":{"loc":{"start":{"line":43,"column":12},"end":{"line":44,"column":41}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":44,"column":41}},{"start":{"line":43,"column":12},"end":{"line":44,"column":41}}],"line":43},"5":{"loc":{"start":{"line":52,"column":12},"end":{"line":53,"column":59}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":53,"column":59}},{"start":{"line":52,"column":12},"end":{"line":53,"column":59}}],"line":52},"6":{"loc":{"start":{"line":61,"column":12},"end":{"line":62,"column":35}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":62,"column":35}},{"start":{"line":61,"column":12},"end":{"line":62,"column":35}}],"line":61}},"s":{"0":1,"1":1,"2":1,"3":1,"4":24,"5":20,"6":24,"7":20,"8":24,"9":24,"10":24,"11":24,"12":24,"13":24,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":137,"24":1,"25":29,"26":4,"27":25,"28":1,"29":0,"30":0,"31":0,"32":1,"33":4,"34":4,"35":0,"36":1,"37":1},"f":{"0":1,"1":24,"2":0,"3":0,"4":137,"5":29,"6":0,"7":4},"b":{"0":[20,4],"1":[20,4],"2":[0,0],"3":[0,0],"4":[4,25],"5":[0,0],"6":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOperator.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAIlD;IAgCI,sBACI,IAAsB,EACtB,KAA8C,EAC9C,YAA4B,EAC5B,kBAAmC,EACnC,uBAAuC;QAFvC,6BAAA,EAAA,mBAA4B;QAC5B,mCAAA,EAAA,0BAAmC;QAnC9B,mBAAa,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;QAsC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAA;QACjC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAA;QAC7C,IAAI,CAAC,wBAAwB,GAAG,uBAAuB,CAAA;IAC3D,CAAC;IAUD,sBAAI,sCAAY;aAAhB;YACI,IAAI,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAA;YAEnC,OAAO,IAAI,CAAC,aAAa,CAAA;QAC7B,CAAC;;;OAAA;IAMD,sBAAI,4CAAkB;aAAtB;YACI,IAAI,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAA;YAEzC,OAAO,IAAI,CAAC,mBAAmB,CAAA;QACnC,CAAC;;;OAAA;IAKD,sBAAI,8BAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAA;QACrB,CAAC;;;OAAA;IAKD,sBAAI,+BAAK;aAAT;YACI,IAAI,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAA;YAG5B,OAAO,IAAI,CAAC,MAAM,CAAA;QACtB,CAAC;;;OAAA;IAKD,sBAAI,iDAAuB;aAA3B;YACI,IAAI,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,uBAAuB,CAAA;YAE9C,OAAO,IAAI,CAAC,wBAAwB,CAAA;QACxC,CAAC;;;OAAA;IAKD,sBAAI,+BAAK;aAAT;YACI,IAAI,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;gBAAE,OAAO,IAAI,CAAC,MAAM,CAAA;YAEnE,OAAO,SAAS,CAAA;QACpB,CAAC;;;OAAA;IACL,mBAAC;AAAD,CAAC,AA5GD,IA4GC;AA5GY,oCAAY","sourcesContent":["import {InstanceChecker} from \"./InstanceChecker\";\nimport {FindOperatorType} from \"./FindOperatorType\";\nimport {ObjectLiteral} from \"./ObjectLiteral\";\n\nexport class FindOperator<T> {\n    readonly \"@instanceof\" = Symbol.for(\"FindOperator\")\n\n    // -------------------------------------------------------------------------\n    // Private Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Operator type.\n     */\n    private readonly _type: FindOperatorType\n\n    /**\n     * Parameter value.\n     */\n    private readonly _value:  T | FindOperator<T> | FindOperator<T>[]\n\n    /**\n     * ObjectLiteral parameters.\n     */\n    private readonly _objectLiteralParameters: ObjectLiteral | undefined\n\n    /**\n     * Indicates if parameter is used or not for this operator.\n     */\n    private readonly _useParameter: boolean\n\n    /**\n     * Indicates if multiple parameters must be used for this operator.\n     */\n    private readonly _multipleParameters: boolean\n\n    constructor(\n        type: FindOperatorType,\n        value: T | FindOperator<T> | FindOperator<T>[],\n        useParameter: boolean = true,\n        multipleParameters: boolean = false,\n        objectLiteralParameters?: ObjectLiteral,\n    ) {\n        this._type = type\n        this._value = value\n        this._useParameter = useParameter\n        this._multipleParameters = multipleParameters\n        this._objectLiteralParameters = objectLiteralParameters\n    }\n\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n\n    /**\n     * Indicates if parameter is used or not for this operator.\n     * Extracts final value if value is another find operator.\n     */\n    get useParameter(): boolean {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.useParameter\n\n        return this._useParameter\n    }\n\n    /**\n     * Indicates if multiple parameters must be used for this operator.\n     * Extracts final value if value is another find operator.\n     */\n    get multipleParameters(): boolean {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.multipleParameters\n\n        return this._multipleParameters\n    }\n\n    /**\n     * Gets the Type of this FindOperator\n     */\n    get type(): FindOperatorType {\n        return this._type\n    }\n\n    /**\n     * Gets the final value needs to be used as parameter value.\n     */ \n    get value(): T | FindOperator<T>[] {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.value\n\n        // TODO: check if this is an array - if it is? what then?\n        return this._value\n    }\n\n    /**\n     * Gets ObjectLiteral parameters.\n     */\n    get objectLiteralParameters(): ObjectLiteral | undefined {\n        if (InstanceChecker.isFindOperator(this._value))\n            return this._value.objectLiteralParameters\n\n        return this._objectLiteralParameters\n    }\n\n    /**\n     * Gets the child FindOperator if it exists\n     */\n    get child(): FindOperator<T> | undefined {\n        if (InstanceChecker.isFindOperator(this._value)) return this._value\n\n        return undefined\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"008aa2ad3845d0c49e489df44b7e2214103f4aa9"},"/Users/waynedouglas/Source/repos/json-api-query/src/EqualOperator.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/EqualOperator.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":16,"column":4}},"1":{"start":{"line":3,"column":24},"end":{"line":8,"column":5}},"2":{"start":{"line":4,"column":8},"end":{"line":6,"column":110}},"3":{"start":{"line":5,"column":69},"end":{"line":5,"column":85}},"4":{"start":{"line":6,"column":30},"end":{"line":6,"column":107}},"5":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"6":{"start":{"line":6,"column":95},"end":{"line":6,"column":107}},"7":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"8":{"start":{"line":9,"column":4},"end":{"line":15,"column":6}},"9":{"start":{"line":10,"column":8},"end":{"line":11,"column":102}},"10":{"start":{"line":11,"column":12},"end":{"line":11,"column":102}},"11":{"start":{"line":12,"column":8},"end":{"line":12,"column":28}},"12":{"start":{"line":13,"column":24},"end":{"line":13,"column":45}},"13":{"start":{"line":14,"column":8},"end":{"line":14,"column":93}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"16":{"start":{"line":19,"column":21},"end":{"line":19,"column":46}},"17":{"start":{"line":20,"column":21},"end":{"line":28,"column":30}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":37}},"19":{"start":{"line":23,"column":20},"end":{"line":23,"column":61}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":59}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":25}},"23":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":45},"end":{"line":2,"column":46}},"loc":{"start":{"line":2,"column":57},"end":{"line":16,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":24},"end":{"line":3,"column":25}},"loc":{"start":{"line":3,"column":40},"end":{"line":8,"column":5}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":51},"end":{"line":5,"column":52}},"loc":{"start":{"line":5,"column":67},"end":{"line":5,"column":87}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":6,"column":12},"end":{"line":6,"column":13}},"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":109}},"line":6},"4":{"name":"(anonymous_4)","decl":{"start":{"line":9,"column":11},"end":{"line":9,"column":12}},"loc":{"start":{"line":9,"column":27},"end":{"line":15,"column":5}},"line":9},"5":{"name":"__","decl":{"start":{"line":13,"column":17},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":22},"end":{"line":13,"column":47}},"line":13},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}},"loc":{"start":{"line":20,"column":39},"end":{"line":28,"column":1}},"line":20},"7":{"name":"EqualOperator","decl":{"start":{"line":22,"column":13},"end":{"line":22,"column":26}},"loc":{"start":{"line":22,"column":34},"end":{"line":26,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":16,"column":4}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":16,"column":4}}],"line":2},"1":{"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":109}},"type":"binary-expr","locations":[{"start":{"line":4,"column":24},"end":{"line":4,"column":45}},{"start":{"line":5,"column":13},"end":{"line":5,"column":47}},{"start":{"line":5,"column":51},"end":{"line":5,"column":87}},{"start":{"line":6,"column":12},"end":{"line":6,"column":109}}],"line":4},"2":{"loc":{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},"type":"if","locations":[{"start":{"line":6,"column":47},"end":{"line":6,"column":107}},{"start":{"line":6,"column":47},"end":{"line":6,"column":107}}],"line":6},"3":{"loc":{"start":{"line":10,"column":8},"end":{"line":11,"column":102}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":11,"column":102}},{"start":{"line":10,"column":8},"end":{"line":11,"column":102}}],"line":10},"4":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":49}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":35}},{"start":{"line":10,"column":39},"end":{"line":10,"column":49}}],"line":10},"5":{"loc":{"start":{"line":14,"column":22},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":35},"end":{"line":14,"column":51}},{"start":{"line":14,"column":55},"end":{"line":14,"column":91}}],"line":14},"6":{"loc":{"start":{"line":23,"column":20},"end":{"line":23,"column":61}},"type":"binary-expr","locations":[{"start":{"line":23,"column":20},"end":{"line":23,"column":53}},{"start":{"line":23,"column":57},"end":{"line":23,"column":61}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":1,"23":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":0},"b":{"0":[1,1,1],"1":[1,0,0,0],"2":[0,0],"3":[0,1],"4":[1,0],"5":[0,1],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/EqualOperator.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/EqualOperator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,+CAA4C;AAE5C;IAAsC,iCAAe;IAGjD,uBAAY,KAA0B;QAAtC,YACI,kBAAM,OAAO,EAAE,KAAK,CAAC,SACxB;QAJQ,oBAAa,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;;IAIpD,CAAC;IACL,oBAAC;AAAD,CAAC,AAND,CAAsC,2BAAY,GAMjD;AANY,sCAAa","sourcesContent":["import {FindOperator} from \"./FindOperator\";\n\nexport class EqualOperator<T> extends FindOperator<T> {\n    readonly \"@instanceof\" = Symbol.for(\"EqualOperator\")\n\n    constructor(value: T | FindOperator<T>) {\n        super(\"equal\", value)\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8f023748e42dc84b0e9be281fbfbecf8603e9b8f"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhere.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhere.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhere.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsWhere.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsWhereProperty} from \"./FindOptionsWhereProperty\";\n\n/** :\n * Used for find operations.\n */\nexport type FindOptionsWhere<Entity> = {\n    [P in keyof Entity]?: FindOptionsWhereProperty<NonNullable<Entity[P]>>\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9df26d4396c5288e935f3760ab4f9a42ae74ba6f"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperatorType.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperatorType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOperatorType.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOperatorType.ts"],"names":[],"mappings":"","sourcesContent":["export type FindOperatorType =\n    | \"not\"\n    | \"lessThan\"\n    | \"lessThanOrEqual\"\n    | \"greaterThan\"\n    | \"greaterOrEqual\"\n    | \"equal\"\n    | \"between\"\n    | \"in\"\n    | \"any\"\n    | \"isNull\"\n    | \"contains\"\n    | \"endsWith\"\n    | \"startsWith\"\n    | \"like\"\n    | \"and\"\n    | \"has\"\n    | \"or\"\n\n\n/*\n* equals\n* lessThan\n* lessOrEqual\n* greaterThan\n* greaterOrEqual\n* contains\n* startsWith\n* endsWith\n* any\n* has\n* isType\n* not\n* or\n* and\n* */\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"00a0761ab2d978bfea90413b710e9dca5aa93b20"},"/Users/waynedouglas/Source/repos/json-api-query/src/ObjectLiteral.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/ObjectLiteral.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/ObjectLiteral.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/ObjectLiteral.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Interface of the simple literal object with any string keys.\n */\nexport interface ObjectLiteral {\n    [key: string]: any\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"58339e8141bc47b1deadc800800329367504d1e6"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelationsProperty.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelationsProperty.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelationsProperty.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelationsProperty.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsRelations} from \"./FindOptionsRelations\";\n\n/**\n * A single property handler for FindOptionsRelations.\n */\nexport type FindOptionsRelationsProperty<Property> = Property extends Promise<infer I>\n    ? FindOptionsRelationsProperty<NonNullable<I>> | boolean\n    : Property extends Array<infer I>\n        ? FindOptionsRelationsProperty<NonNullable<I>> | boolean\n        : Property extends Function\n            ? never\n            : Property extends Date\n                ? never\n                : Property extends object\n                    ? FindOptionsRelations<Property> | boolean\n                    : boolean\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"44bc48cf82d65513080bad68d154c5b262c3f6e5"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelations.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelations.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelations.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsRelations.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsRelationsProperty} from \"./FindOptionsRelationsProperty\";\n\n/**\n * Relations find options.\n */\nexport type FindOptionsRelations<Entity> = {\n    [P in keyof Entity]?: FindOptionsRelationsProperty<NonNullable<Entity[P]>>\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"031f191aa506a899970316e42af97108efcbd666"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelectProperty.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelectProperty.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelectProperty.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelectProperty.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsSelect} from \"./FindOptionsSelect\";\n\n/**\n * A single property handler for FindOptionsSelect.\n */\nexport type FindOptionsSelectProperty<Property> = Property extends Promise<infer I>\n    ? FindOptionsSelectProperty<I> | boolean\n    : Property extends Array<infer I>\n        ? FindOptionsSelectProperty<I> | boolean\n        : Property extends Function\n            ? boolean\n            : Property extends Date\n                ? boolean\n                : Property extends object\n                    ? FindOptionsSelect<Property>\n                    : boolean\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"477b854fad295f1e3df1351c6129c49004d99169"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelect.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelect.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelect.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOptionsSelect.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsSelectProperty} from \"./FindOptionsSelectProperty\";\n\n/**\n * Select find options.\n */\nexport type FindOptionsSelect<Entity> = {\n    [P in keyof Entity]?: FindOptionsSelectProperty<NonNullable<Entity[P]>>\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b8f8950cc1d798576826c36949d34f6091544d4a"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindOneOptions.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOneOptions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindOneOptions.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindOneOptions.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOptionsWhere} from \"./FindOptionsWhere\";\nimport {FindOptionsSelect} from \"./FindOptionsSelect\";\nimport {FindOptionsRelations} from \"./FindOptionsRelations\";\nimport {FindOptionsOrder} from \"./FindOptionsOrder\";\n\n/**\n * Defines a special criteria to find specific entity.\n */\nexport interface FindOneOptions<Entity = any> {\n   \n    /**\n     * Specifies what columns should be retrieved.\n     */\n    fields?: FindOptionsSelect<Entity>\n\n    /**\n     * Simple condition that should be applied to match entities.\n     */\n    where?: FindOptionsWhere<Entity>[] | FindOptionsWhere<Entity>\n\n    /**\n     * Indicates what relations of entity should be loaded (simplified left join form).\n     */\n    relations?: FindOptionsRelations<Entity>\n\n\n    /**\n     * Order, in which entities should be ordered.\n     */\n    order?: FindOptionsOrder<Entity>\n\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca0d9589e031702eb213bddc77dcc210ce9c6242"},"/Users/waynedouglas/Source/repos/json-api-query/src/FindManyOptions.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/FindManyOptions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/FindManyOptions.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/FindManyOptions.ts"],"names":[],"mappings":"","sourcesContent":["import {FindOneOptions} from \"./FindOneOptions\";\n\n/**\n * Defines a special criteria to find specific entities.\n */\nexport interface FindManyOptions<Entity = any> extends FindOneOptions<Entity> {\n    /**\n     * Offset (paginated) where from entities should be taken.\n     */\n    size?: number\n\n    /**\n     * Limit (paginated) - max number of entities should be taken.\n     */\n    number?: number\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1a5c1cde1b3d31decf8a4aa8bcf25962511315dc"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThan.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThan.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":65}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}}},"fnMap":{"0":{"name":"GreaterThan","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":20}},"loc":{"start":{"line":5,"column":28},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThan.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThan.ts"],"names":[],"mappings":";;;AAIA,gDAA6C;AAE7C,SAAgB,WAAW,CAAI,KAA0B;IACrD,OAAO,IAAI,2BAAY,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;AACjD,CAAC;AAFD,kCAEC","sourcesContent":["/**\n * Find Options Operator.\n * Example: { someField: MoreThan(10) }\n */\nimport {FindOperator} from \"../FindOperator\";\n\nexport function GreaterThan<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"greaterThan\", value)\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6deefe0ac30655a75995dce2cc1bfd49775d5bf1"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Any.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Any.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":69}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":18}}},"fnMap":{"0":{"name":"Any","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":12}},"loc":{"start":{"line":5,"column":20},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Any.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Any.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,GAAG,CAAI,KAA4B;IAC/C,OAAO,IAAI,2BAAY,CAAC,KAAK,EAAE,KAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AAC5D,CAAC;AAFD,kBAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Any<T>(value: T[] | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"any\", value as any, true, true)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"571bd0e5978931abc8e6e7f611ea741417874852"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Contains.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Contains.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":62}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}}},"fnMap":{"0":{"name":"Contains","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":25},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Contains.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Contains.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,QAAQ,CAAI,KAA0B;IAClD,OAAO,IAAI,2BAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;AAC9C,CAAC;AAFD,4BAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Contains<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"contains\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6dc1370b4f9d5841ca90fced72556eb9228b4d92"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/EndsWith.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/EndsWith.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":62}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}}},"fnMap":{"0":{"name":"EndsWith","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":25},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/EndsWith.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/EndsWith.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,QAAQ,CAAI,KAA0B;IAClD,OAAO,IAAI,2BAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;AAC9C,CAAC;AAFD,4BAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function EndsWith<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"endsWith\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc4c9ed9425ba03eaaaa171fb39204542baebb45"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Has.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Has.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":69}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":18}}},"fnMap":{"0":{"name":"Has","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":12}},"loc":{"start":{"line":5,"column":20},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":3,"4":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Has.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Has.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,GAAG,CAAI,KAA4B;IAC/C,OAAO,IAAI,2BAAY,CAAC,KAAK,EAAE,KAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AAC5D,CAAC;AAFD,kBAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Has<T>(value: T[] | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"has\", value as any, true, true)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"839a9de64c25940f7dc926793093ff1d7795d3a5"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/StartsWith.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/StartsWith.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":64}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}}},"fnMap":{"0":{"name":"StartsWith","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":27},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/StartsWith.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/StartsWith.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,UAAU,CAAI,KAA0B;IACpD,OAAO,IAAI,2BAAY,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;AAChD,CAAC;AAFD,gCAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function StartsWith<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"startsWith\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec3df36fe8ea5f23c466c4172eb8f1cdcc1f63e2"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Or.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Or.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":20}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":56}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":16}}},"fnMap":{"0":{"name":"Or","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":11}},"loc":{"start":{"line":5,"column":19},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Or.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Or.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,EAAE,CAAI,KAA8C;IAChE,OAAO,IAAI,2BAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACxC,CAAC;AAFD,gBAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Or<T>(value: T | FindOperator<T> | FindOperator<T>[]): FindOperator<T> {\n    return new FindOperator(\"or\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c3bb353efa295a8bf99d650ac56e817d0d9d2bd5"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Not.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Not.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":57}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":18}}},"fnMap":{"0":{"name":"Not","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":12}},"loc":{"start":{"line":5,"column":20},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":4,"4":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Not.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Not.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,GAAG,CAAI,KAA0B;IAC7C,OAAO,IAAI,2BAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AACzC,CAAC;AAFD,kBAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Not<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"not\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b930f05bf7f12d515ac6fd4bac579a10fc2d6049"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThanOrEqual.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThanOrEqual.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":69}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}}},"fnMap":{"0":{"name":"LessThanOrEqual","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":32},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThanOrEqual.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThanOrEqual.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,eAAe,CAAI,KAA0B;IACzD,OAAO,IAAI,2BAAY,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAA;AACrD,CAAC;AAFD,0CAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function LessThanOrEqual<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"lessThanOrEqual\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d535373e8dc66233987b763d1b7ed32ae0cfd26"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThan.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThan.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":62}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}}},"fnMap":{"0":{"name":"LessThan","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":25},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThan.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/LessThan.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,QAAQ,CAAI,KAA0B;IAClD,OAAO,IAAI,2BAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;AAC9C,CAAC;AAFD,4BAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function LessThan<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"lessThan\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"141fa07f4c326fe9ae10b625fbcd524d9bec0793"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThanOrEqual.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThanOrEqual.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":68}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}}},"fnMap":{"0":{"name":"GreaterThanOrEqual","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":27}},"loc":{"start":{"line":5,"column":35},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThanOrEqual.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/GreaterThanOrEqual.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,kBAAkB,CAAI,KAA0B;IAC5D,OAAO,IAAI,2BAAY,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAA;AACpD,CAAC;AAFD,gDAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function GreaterThanOrEqual<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"greaterOrEqual\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9fa0a2a8712373ce28e807c5db6066a59c60f6ee"},"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Equals.ts":{"path":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Equals.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":59}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"fnMap":{"0":{"name":"Equals","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":15}},"loc":{"start":{"line":5,"column":23},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":1},"f":{"0":7},"b":{},"inputSourceMap":{"version":3,"file":"/Users/waynedouglas/Source/repos/json-api-query/src/operators/Equals.ts","sources":["/Users/waynedouglas/Source/repos/json-api-query/src/operators/Equals.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAE7C,SAAgB,MAAM,CAAI,KAA0B;IAChD,OAAO,IAAI,2BAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;AAC3C,CAAC;AAFD,wBAEC","sourcesContent":["import {FindOperator} from \"../FindOperator\";\n\nexport function Equals<T>(value: T | FindOperator<T>): FindOperator<T> {\n    return new FindOperator(\"equal\", value)\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"257f79f64cc6c6bf274d6e1f92f04756d5896758"}}